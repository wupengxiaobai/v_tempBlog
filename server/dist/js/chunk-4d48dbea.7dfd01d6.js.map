{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_array-methods.js","webpack:///./node_modules/core-js/modules/_is-array.js","webpack:///./node_modules/wangeditor/release/wangEditor.js","webpack:///./node_modules/core-js/modules/es6.array.find-index.js","webpack:///./src/views/admin/articles-management.vue?2d42","webpack:///./src/views/admin/articles-management.vue?02a4","webpack:///./src/components/admin/article/edit-article.vue?47a5","webpack:///./src/components/admin/common/Editor.vue?e8fd","webpack:///src/components/admin/common/Editor.vue","webpack:///./src/components/admin/common/Editor.vue?4188","webpack:///./src/components/admin/common/Editor.vue","webpack:///./src/components/admin/common/imgLoad.vue?5003","webpack:///src/components/admin/common/imgLoad.vue","webpack:///./src/components/admin/common/imgLoad.vue?83c4","webpack:///./src/components/admin/common/imgLoad.vue","webpack:///src/components/admin/article/edit-article.vue","webpack:///./src/components/admin/article/edit-article.vue?1031","webpack:///./src/components/admin/article/edit-article.vue","webpack:///./src/components/admin/article/add-article.vue?3aaf","webpack:///src/components/admin/article/add-article.vue","webpack:///./src/components/admin/article/add-article.vue?d517","webpack:///./src/components/admin/article/add-article.vue","webpack:///src/views/admin/articles-management.vue","webpack:///./src/views/admin/articles-management.vue?89db","webpack:///./src/views/admin/articles-management.vue","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/assign.js","webpack:///./src/views/admin/default.vue?6735","webpack:///./node_modules/core-js/modules/es6.array.find.js","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/components/admin/article/add-article.vue?5b26","webpack:///./src/views/admin/default.vue?7ea1","webpack:///src/views/admin/default.vue","webpack:///./src/views/admin/default.vue?5b78","webpack:///./src/views/admin/default.vue","webpack:///./node_modules/core-js/modules/web.dom.iterable.js","webpack:///./node_modules/core-js/modules/_array-species-create.js","webpack:///./node_modules/core-js/modules/_array-species-constructor.js","webpack:///./src/components/admin/article/edit-article.vue?e39a"],"names":["ctx","__webpack_require__","IObject","toObject","toLength","asc","module","exports","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","create","$this","callbackfn","that","val","res","O","self","f","length","index","result","undefined","push","cof","Array","isArray","arg","global","factory","this","polyfill","Object","assign","target","varArgs","TypeError","to","arguments","nextSource","nextKey","prototype","hasOwnProperty","call","Element","matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","s","document","ownerDocument","querySelectorAll","i","item","createElemByHTML","html","div","createElement","innerHTML","children","isDOMList","selector","HTMLCollection","NodeList","eventList","DomElement","nodeType","selectorResult","replace","trim","indexOf","$","constructor","forEach","fn","elem","clone","deep","cloneList","cloneNode","get","first","last","on","type","types","split","addEventListener","e","off","removeEventListener","attr","key","getAttribute","setAttribute","addClass","className","arr","filter","join","removeClass","css","currentStyle","style","styleArr","resultArr","map","show","hide","childNodes","append","$children","child","appendChild","remove","parent","parentElement","removeChild","isContain","$child","contains","getSizeData","getBoundingClientRect","getNodeName","nodeName","find","text","value","focus","parentUntil","_currentElem","results","equal","$elem","insertBefore","$referenceNode","referenceNode","parentNode","insertAfter","lastChild","nextSibling","offAll","config","menus","fontNames","colors","emotions","title","content","alt","src","zIndex","debug","linkCheck","link","linkImgCheck","pasteFilterStyle","pasteIgnoreImg","pasteTextHandle","showLinkImg","linkImgCallback","url","uploadImgMaxSize","uploadImgShowBase64","uploadFileName","uploadImgParams","uploadImgHeaders","withCredentials","uploadImgTimeout","uploadImgHooks","before","xhr","editor","files","success","fail","error","timeout","qiniu","UA","_ua","navigator","userAgent","isWebkit","reg","test","isIE","window","objForEach","obj","arrForEach","fakeArr","getRandom","prefix","Math","random","toString","slice","replaceHtmlSymbol","isFunction","Bold","_active","onClick","isSeleEmpty","selection","isSelectionEmpty","createEmptyRange","cmd","do","collapseRange","restoreSelection","tryChangeActive","queryCommandState","replaceLang","str","langArgs","_emptyFn","DropList","menu","opt","_this","$container","$title","titleHtml","list","$list","elemHtml","$li","hideTimeoutId","setTimeout","_rendered","_show","Head","droplist","width","_command","FontSize","FontName","fontName","clearTimeout","$menuELem","menuHeight","height","showTimeoutId","$selectionElem","getSelectionContainerElem","$textElem","cmdValue","queryCommandValue","emptyFn","_isCreatedPanelMenus","Panel","Link","Italic","Redo","StrikeThrough","Underline","Undo","List","Justify","ForeColor","color","BackColor","Quote","Code","Emoticon","Table","Video","Image","imgMenuId","$body","$textContainerElem","$closeBtn","$tabTitleContainer","$tabContentContainer","tabs","tabTitleArr","tabContentArr","tab","tabIndex","tpl","$content","_index","stopPropagation","events","event","needToHide","$inputs","_hideOtherPanels","panel","$linkelem","createRangeByElem","_createPanel","getSelectionText","inputLinkId","inputTextId","btnOkId","btnDelId","delBtnDisplay","$link","$text","_insertLink","_delLink","$selectionELem","selectionText","checkResult","alert","$parent","$targetELem","$startElem","getSelectionStartElem","$endElem","getSelectionEndElem","$code","textId","btnId","_insertCode","_updateCode","$parentElem","tabConfig","emotData","emotType","faceHtml","$target","insertHtml","_insert","emotHtml","_createEditPanel","_createInsertPanel","btnInsertId","textRowNum","textColNum","rowNum","parseInt","colNum","r","c","_this2","addRowBtnId","addColBtnId","delRowBtnId","delColBtnId","delTableBtnId","_addRow","_addCol","_delRow","_delCol","_delTable","_getLocationData","$tr","$tds","tdLength","td","$tbody","$trs","trLength","tr","locationData","trData","$currentTr","tdData","newTr","tdIndex","$trParent","$currentTd","name","toLowerCase","newTd","$table","textValId","width30","width50","width100","delBtn","tabsConfig","$img","_selectedImg","uploadImg","upTriggerId","upFileId","linkUrlId","linkBtnId","$file","fileElem","click","fileList","$linkUrl","insertLinkImg","tabsConfigResult","uploadImgServer","customUploadImg","FileReader","MenuConstructors","Menus","getPasteText","clipboardData","originalEvent","pasteText","getData","getPasteHtml","filterStyle","ignoreImg","pasteHtml","docSplitHtml","getPasteImgs","txt","items","getAsFile","getChildrenJSON","curElem","elemResult","textContent","tag","attrData","attrList","attributes","attrListLength","attrs","Text","Command","API","_currentRange","Progress","_time","_isShow","_isRender","_timeoutId","$textContainer","$bar","bold","head","fontSize","italic","redo","strikeThrough","underline","undo","justify","foreColor","backColor","quote","code","emoticon","table","video","image","init","configMenus","menuKey","MenuConstructor","_addToToolbar","_bindEvent","$toolbarElem","getRange","changeActive","clear","initSelection","getJSON","_saveRangeRealTime","_enterKeyHandle","_clearHandle","_pasteHandle","_tabHandle","_imgHandle","_dragHandle","saveRange","insertEmptyP","$p","pHandle","codeHandle","selectionNodeName","parentNodeName","queryCommandSupported","_willBreakCode","preventDefault","_startOffset","startOffset","codeLength","keyCode","txtHtml","pasteTime","canDo","now","Date","flag","resetTime","ex","pasteFiles","img","$document","dataTransfer","_useStyleWithCSS","execCommand","_name","_execCommand","change","_insertHTML","range","insertNode","deleteContents","pasteHTML","_insertElem","_range","getSelection","rangeCount","getRangeAt","$containerElem","toStart","collapse","commonAncestorContainer","startContainer","endContainer","endOffset","removeAllRanges","addRange","setEnd","isContent","createRange","selectNodeContents","selectNode","progress","timeoutId","_hide","_typeof","Symbol","iterator","UploadImg","_alert","alertInfo","debugInfo","customAlert","Error","onload","callback","onerror","onabort","_this3","maxSize","maxSizeM","maxLength","uploadImgMaxLength","uploadImgParamsWithUrl","hooks","resultFiles","errInfo","file","size","bind","formdata","FormData","uploadImgServerArr","uploadImgServerHash","XMLHttpRequest","open","ontimeout","upload","onprogress","percent","progressBar","lengthComputable","loaded","total","onreadystatechange","readyState","status","responseText","JSON","parse","customInsert","errno","data","beforeResult","prevent","msg","setRequestHeader","send","reader","readAsDataURL","editorId","Editor","toolbarSelector","textSelector","id","customConfig","_initConfig","langConfig","lang","RegExp","_initDom","$toolbarSelector","config$$1","toolbarElemId","textElemId","compositionEnd","onfocus","onblur","isFocus","isChild","isToolbar","isMenu","_initCommand","_initSelectionAPI","_initUploadImg","_initMenus","_initText","newLine","$last","onChangeTimeoutId","beforeChangeHtml","onchangeTimeout","onchange","currentHtml","_offAllEvent","inlinecss","getElementsByTagName","wangEditor","$export","$find","KEY","forced","P","F","findIndex","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_articles_management_vue_vue_type_style_index_0_id_347779d0_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_articles_management_vue_vue_type_style_index_0_id_347779d0_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","n","render","_vm","_h","$createElement","_c","_self","staticClass","selectMenuIndex","slot","addArticleShow","_v","disabled","ids","$event","deleteChecked","placeholder","model","$$v","searchInput","expression","select","label","icon","getArticleData","keyword","staticStyle","border","highlight-current-row","articleListData","max-height","selection-change","handleSelectionChange","align","scopedSlots","_u","scope","_s","formatTime","row","createtime","prop","show-overflow-tooltip","bannerimg","top","articlestate","fixed","nativeOn","editRow","$index","deleteRow","current-page","pagationParams","currentPage","page-sizes","page-size","limit","layout","totalcount","size-change","handleSizeChange","current-change","handleCurrentChange","ref","articleTypeData","editArticleData","staticRenderFns","edit_articlevue_type_template_id_5b85b27e_scoped_true_render","visible","editDialogVisible","before-close","handleClose","update:visible","$set","default-time","editArticleCreateTimeChange","editArticleTypeChange","_l","group","it","editArticleTopChange","editArticleStateChange","initContent","getEditorContent","editGetEditorContent","action","uploadImageSuccess","editArticleBannerImgChange","commitEditArticle","edit_articlevue_type_template_id_5b85b27e_scoped_true_staticRenderFns","Editorvue_type_template_id_46b2800c_scoped_true_render","text-align","Editorvue_type_template_id_46b2800c_scoped_true_staticRenderFns","Editorvue_type_script_lang_js_","props","String","default","editorContent","methods","getContent","$emit","mounted","wangEditor_default","a","$refs","watch","nVal","common_Editorvue_type_script_lang_js_","component","componentNormalizer","imgLoadvue_type_template_id_011a1662_scoped_true_render","on-preview","handlePreview","on-remove","handleRemove","on-success","handleSuccess","file-list","list-type","_t","imgLoadvue_type_template_id_011a1662_scoped_true_staticRenderFns","imgLoadvue_type_script_lang_js_","response","console","log","common_imgLoadvue_type_script_lang_js_","imgLoad_component","imgLoad","edit_articlevue_type_script_lang_js_","editor2","article","then","lib_notification_default","message","catch","err","$xss","filelist","fileListArray","filename","done","lib_message_box_default","confirm","_","components","ImgLoad","article_edit_articlevue_type_script_lang_js_","edit_article_component","edit_article","add_articlevue_type_template_id_478322f4_scoped_true_render","dialogVisible","articleCreateTimeChange","articleTypeChange","articleTopChange","articleBannerImgChange","commitArticle","add_articlevue_type_template_id_478322f4_scoped_true_staticRenderFns","add_articlevue_type_script_lang_js_","desc","article_add_articlevue_type_script_lang_js_","add_article_component","add_article","articles_managementvue_type_script_lang_js_","getArticleTypeData","tempArr","pid","options","j","params","rows","assign_default","confirmButtonText","cancelButtonText","splice","_this4","util","created","AdminDefault","admin_default","EditArticle","AddArticle","admin_articles_managementvue_type_script_lang_js_","articles_management_component","__webpack_exports__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_style_index_0_id_1579c499_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_default_vue_vue_type_style_index_0_id_1579c499_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","dP","FProto","Function","nameRE","NAME","configurable","match","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_add_article_vue_vue_type_style_index_0_id_478322f4_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_add_article_vue_vue_type_style_index_0_id_478322f4_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0___default","default-active","background-color","text-color","active-text-color","handleSelect","defaultvue_type_script_lang_js_","admin_defaultvue_type_script_lang_js_","$iterators","getKeys","redefine","Iterators","wks","ITERATOR","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","proto","speciesConstructor","original","isObject","SPECIES","C","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_article_vue_vue_type_style_index_0_id_5b85b27e_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0__","_node_modules_mini_css_extract_plugin_dist_loader_js_ref_11_oneOf_1_0_node_modules_css_loader_index_js_ref_11_oneOf_1_1_node_modules_vue_loader_lib_loaders_stylePostLoader_js_node_modules_postcss_loader_src_index_js_ref_11_oneOf_1_2_node_modules_stylus_loader_index_js_ref_11_oneOf_1_3_node_modules_cache_loader_dist_cjs_js_ref_0_0_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_article_vue_vue_type_style_index_0_id_5b85b27e_lang_stylus_scoped_true___WEBPACK_IMPORTED_MODULE_0___default"],"mappings":"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","file":"js/chunk-4d48dbea.7dfd01d6.js","sourcesContent":["// 0 -> Array#forEach\n// 1 -> Array#map\n// 2 -> Array#filter\n// 3 -> Array#some\n// 4 -> Array#every\n// 5 -> Array#find\n// 6 -> Array#findIndex\nvar ctx = require('./_ctx');\nvar IObject = require('./_iobject');\nvar toObject = require('./_to-object');\nvar toLength = require('./_to-length');\nvar asc = require('./_array-species-create');\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      val = self[index];\n      res = f(val, index, O);\n      if (TYPE) {\n        if (IS_MAP) result[index] = res;   // map\n        else if (res) switch (TYPE) {\n          case 3: return true;             // some\n          case 5: return val;              // find\n          case 6: return index;            // findIndex\n          case 2: result.push(val);        // filter\n        } else if (IS_EVERY) return false; // every\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n","// 7.2.2 IsArray(argument)\nvar cof = require('./_cof');\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.wangEditor = factory());\n}(this, (function () { 'use strict';\n\n/*\n    poly-fill\n*/\n\nvar polyfill = function () {\n\n    // Object.assign\n    if (typeof Object.assign != 'function') {\n        Object.assign = function (target, varArgs) {\n            // .length of function is 2\n            if (target == null) {\n                // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource != null) {\n                    // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        };\n    }\n\n    // IE 中兼容 Element.prototype.matches\n    if (!Element.prototype.matches) {\n        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {\n            var matches = (this.document || this.ownerDocument).querySelectorAll(s),\n                i = matches.length;\n            while (--i >= 0 && matches.item(i) !== this) {}\n            return i > -1;\n        };\n    }\n};\n\n/*\n    DOM 操作 API\n*/\n\n// 根据 html 代码片段创建 dom 对象\nfunction createElemByHTML(html) {\n    var div = void 0;\n    div = document.createElement('div');\n    div.innerHTML = html;\n    return div.children;\n}\n\n// 是否是 DOM List\nfunction isDOMList(selector) {\n    if (!selector) {\n        return false;\n    }\n    if (selector instanceof HTMLCollection || selector instanceof NodeList) {\n        return true;\n    }\n    return false;\n}\n\n// 封装 document.querySelectorAll\nfunction querySelectorAll(selector) {\n    var result = document.querySelectorAll(selector);\n    if (isDOMList(result)) {\n        return result;\n    } else {\n        return [result];\n    }\n}\n\n// 记录所有的事件绑定\nvar eventList = [];\n\n// 创建构造函数\nfunction DomElement(selector) {\n    if (!selector) {\n        return;\n    }\n\n    // selector 本来就是 DomElement 对象，直接返回\n    if (selector instanceof DomElement) {\n        return selector;\n    }\n\n    this.selector = selector;\n    var nodeType = selector.nodeType;\n\n    // 根据 selector 得出的结果（如 DOM，DOM List）\n    var selectorResult = [];\n    if (nodeType === 9) {\n        // document 节点\n        selectorResult = [selector];\n    } else if (nodeType === 1) {\n        // 单个 DOM 节点\n        selectorResult = [selector];\n    } else if (isDOMList(selector) || selector instanceof Array) {\n        // DOM List 或者数组\n        selectorResult = selector;\n    } else if (typeof selector === 'string') {\n        // 字符串\n        selector = selector.replace('/\\n/mg', '').trim();\n        if (selector.indexOf('<') === 0) {\n            // 如 <div>\n            selectorResult = createElemByHTML(selector);\n        } else {\n            // 如 #id .class\n            selectorResult = querySelectorAll(selector);\n        }\n    }\n\n    var length = selectorResult.length;\n    if (!length) {\n        // 空数组\n        return this;\n    }\n\n    // 加入 DOM 节点\n    var i = void 0;\n    for (i = 0; i < length; i++) {\n        this[i] = selectorResult[i];\n    }\n    this.length = length;\n}\n\n// 修改原型\nDomElement.prototype = {\n    constructor: DomElement,\n\n    // 类数组，forEach\n    forEach: function forEach(fn) {\n        var i = void 0;\n        for (i = 0; i < this.length; i++) {\n            var elem = this[i];\n            var result = fn.call(elem, elem, i);\n            if (result === false) {\n                break;\n            }\n        }\n        return this;\n    },\n\n    // clone\n    clone: function clone(deep) {\n        var cloneList = [];\n        this.forEach(function (elem) {\n            cloneList.push(elem.cloneNode(!!deep));\n        });\n        return $(cloneList);\n    },\n\n    // 获取第几个元素\n    get: function get(index) {\n        var length = this.length;\n        if (index >= length) {\n            index = index % length;\n        }\n        return $(this[index]);\n    },\n\n    // 第一个\n    first: function first() {\n        return this.get(0);\n    },\n\n    // 最后一个\n    last: function last() {\n        var length = this.length;\n        return this.get(length - 1);\n    },\n\n    // 绑定事件\n    on: function on(type, selector, fn) {\n        // selector 不为空，证明绑定事件要加代理\n        if (!fn) {\n            fn = selector;\n            selector = null;\n        }\n\n        // type 是否有多个\n        var types = [];\n        types = type.split(/\\s+/);\n\n        return this.forEach(function (elem) {\n            types.forEach(function (type) {\n                if (!type) {\n                    return;\n                }\n\n                // 记录下，方便后面解绑\n                eventList.push({\n                    elem: elem,\n                    type: type,\n                    fn: fn\n                });\n\n                if (!selector) {\n                    // 无代理\n                    elem.addEventListener(type, fn);\n                    return;\n                }\n\n                // 有代理\n                elem.addEventListener(type, function (e) {\n                    var target = e.target;\n                    if (target.matches(selector)) {\n                        fn.call(target, e);\n                    }\n                });\n            });\n        });\n    },\n\n    // 取消事件绑定\n    off: function off(type, fn) {\n        return this.forEach(function (elem) {\n            elem.removeEventListener(type, fn);\n        });\n    },\n\n    // 获取/设置 属性\n    attr: function attr(key, val) {\n        if (val == null) {\n            // 获取值\n            return this[0].getAttribute(key);\n        } else {\n            // 设置值\n            return this.forEach(function (elem) {\n                elem.setAttribute(key, val);\n            });\n        }\n    },\n\n    // 添加 class\n    addClass: function addClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    return !!item.trim();\n                });\n                // 添加 class\n                if (arr.indexOf(className) < 0) {\n                    arr.push(className);\n                }\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            } else {\n                elem.className = className;\n            }\n        });\n    },\n\n    // 删除 class\n    removeClass: function removeClass(className) {\n        if (!className) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var arr = void 0;\n            if (elem.className) {\n                // 解析当前 className 转换为数组\n                arr = elem.className.split(/\\s/);\n                arr = arr.filter(function (item) {\n                    item = item.trim();\n                    // 删除 class\n                    if (!item || item === className) {\n                        return false;\n                    }\n                    return true;\n                });\n                // 修改 elem.class\n                elem.className = arr.join(' ');\n            }\n        });\n    },\n\n    // 修改 css\n    css: function css(key, val) {\n        var currentStyle = key + ':' + val + ';';\n        return this.forEach(function (elem) {\n            var style = (elem.getAttribute('style') || '').trim();\n            var styleArr = void 0,\n                resultArr = [];\n            if (style) {\n                // 将 style 按照 ; 拆分为数组\n                styleArr = style.split(';');\n                styleArr.forEach(function (item) {\n                    // 对每项样式，按照 : 拆分为 key 和 value\n                    var arr = item.split(':').map(function (i) {\n                        return i.trim();\n                    });\n                    if (arr.length === 2) {\n                        resultArr.push(arr[0] + ':' + arr[1]);\n                    }\n                });\n                // 替换或者新增\n                resultArr = resultArr.map(function (item) {\n                    if (item.indexOf(key) === 0) {\n                        return currentStyle;\n                    } else {\n                        return item;\n                    }\n                });\n                if (resultArr.indexOf(currentStyle) < 0) {\n                    resultArr.push(currentStyle);\n                }\n                // 结果\n                elem.setAttribute('style', resultArr.join('; '));\n            } else {\n                // style 无值\n                elem.setAttribute('style', currentStyle);\n            }\n        });\n    },\n\n    // 显示\n    show: function show() {\n        return this.css('display', 'block');\n    },\n\n    // 隐藏\n    hide: function hide() {\n        return this.css('display', 'none');\n    },\n\n    // 获取子节点\n    children: function children() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.children);\n    },\n\n    // 获取子节点（包括文本节点）\n    childNodes: function childNodes() {\n        var elem = this[0];\n        if (!elem) {\n            return null;\n        }\n\n        return $(elem.childNodes);\n    },\n\n    // 增加子节点\n    append: function append($children) {\n        return this.forEach(function (elem) {\n            $children.forEach(function (child) {\n                elem.appendChild(child);\n            });\n        });\n    },\n\n    // 移除当前节点\n    remove: function remove() {\n        return this.forEach(function (elem) {\n            if (elem.remove) {\n                elem.remove();\n            } else {\n                var parent = elem.parentElement;\n                parent && parent.removeChild(elem);\n            }\n        });\n    },\n\n    // 是否包含某个子节点\n    isContain: function isContain($child) {\n        var elem = this[0];\n        var child = $child[0];\n        return elem.contains(child);\n    },\n\n    // 尺寸数据\n    getSizeData: function getSizeData() {\n        var elem = this[0];\n        return elem.getBoundingClientRect(); // 可得到 bottom height left right top width 的数据\n    },\n\n    // 封装 nodeName\n    getNodeName: function getNodeName() {\n        var elem = this[0];\n        return elem.nodeName;\n    },\n\n    // 从当前元素查找\n    find: function find(selector) {\n        var elem = this[0];\n        return $(elem.querySelectorAll(selector));\n    },\n\n    // 获取当前元素的 text\n    text: function text(val) {\n        if (!val) {\n            // 获取 text\n            var elem = this[0];\n            return elem.innerHTML.replace(/<.*?>/g, function () {\n                return '';\n            });\n        } else {\n            // 设置 text\n            return this.forEach(function (elem) {\n                elem.innerHTML = val;\n            });\n        }\n    },\n\n    // 获取 html\n    html: function html(value) {\n        var elem = this[0];\n        if (value == null) {\n            return elem.innerHTML;\n        } else {\n            elem.innerHTML = value;\n            return this;\n        }\n    },\n\n    // 获取 value\n    val: function val() {\n        var elem = this[0];\n        return elem.value.trim();\n    },\n\n    // focus\n    focus: function focus() {\n        return this.forEach(function (elem) {\n            elem.focus();\n        });\n    },\n\n    // parent\n    parent: function parent() {\n        var elem = this[0];\n        return $(elem.parentElement);\n    },\n\n    // parentUntil 找到符合 selector 的父节点\n    parentUntil: function parentUntil(selector, _currentElem) {\n        var results = document.querySelectorAll(selector);\n        var length = results.length;\n        if (!length) {\n            // 传入的 selector 无效\n            return null;\n        }\n\n        var elem = _currentElem || this[0];\n        if (elem.nodeName === 'BODY') {\n            return null;\n        }\n\n        var parent = elem.parentElement;\n        var i = void 0;\n        for (i = 0; i < length; i++) {\n            if (parent === results[i]) {\n                // 找到，并返回\n                return $(parent);\n            }\n        }\n\n        // 继续查找\n        return this.parentUntil(selector, parent);\n    },\n\n    // 判断两个 elem 是否相等\n    equal: function equal($elem) {\n        if ($elem.nodeType === 1) {\n            return this[0] === $elem;\n        } else {\n            return this[0] === $elem[0];\n        }\n    },\n\n    // 将该元素插入到某个元素前面\n    insertBefore: function insertBefore(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            parent.insertBefore(elem, referenceNode);\n        });\n    },\n\n    // 将该元素插入到某个元素后面\n    insertAfter: function insertAfter(selector) {\n        var $referenceNode = $(selector);\n        var referenceNode = $referenceNode[0];\n        if (!referenceNode) {\n            return this;\n        }\n        return this.forEach(function (elem) {\n            var parent = referenceNode.parentNode;\n            if (parent.lastChild === referenceNode) {\n                // 最后一个元素\n                parent.appendChild(elem);\n            } else {\n                // 不是最后一个元素\n                parent.insertBefore(elem, referenceNode.nextSibling);\n            }\n        });\n    }\n};\n\n// new 一个对象\nfunction $(selector) {\n    return new DomElement(selector);\n}\n\n// 解绑所有事件，用于销毁编辑器\n$.offAll = function () {\n    eventList.forEach(function (item) {\n        var elem = item.elem;\n        var type = item.type;\n        var fn = item.fn;\n        // 解绑\n        elem.removeEventListener(type, fn);\n    });\n};\n\n/*\n    配置信息\n*/\n\nvar config = {\n\n    // 默认菜单配置\n    menus: ['head', 'bold', 'fontSize', 'fontName', 'italic', 'underline', 'strikeThrough', 'foreColor', 'backColor', 'link', 'list', 'justify', 'quote', 'emoticon', 'image', 'table', 'video', 'code', 'undo', 'redo'],\n\n    fontNames: ['宋体', '微软雅黑', 'Arial', 'Tahoma', 'Verdana'],\n\n    colors: ['#000000', '#eeece0', '#1c487f', '#4d80bf', '#c24f4a', '#8baa4a', '#7b5ba1', '#46acc8', '#f9963b', '#ffffff'],\n\n    // // 语言配置\n    // lang: {\n    //     '设置标题': 'title',\n    //     '正文': 'p',\n    //     '链接文字': 'link text',\n    //     '链接': 'link',\n    //     '插入': 'insert',\n    //     '创建': 'init'\n    // },\n\n    // 表情\n    emotions: [{\n        // tab 的标题\n        title: '默认',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            alt: '[坏笑]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/50/pcmoren_huaixiao_org.png'\n        }, {\n            alt: '[舔屏]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/40/pcmoren_tian_org.png'\n        }, {\n            alt: '[污]',\n            src: 'http://img.t.sinajs.cn/t4/appstyle/expression/ext/normal/3c/pcmoren_wu_org.png'\n        }]\n    }, {\n        // tab 的标题\n        title: '新浪',\n        // type -> 'emoji' / 'image'\n        type: 'image',\n        // content -> 数组\n        content: [{\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/7a/shenshou_thumb.gif',\n            alt: '[草泥马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/60/horse2_thumb.gif',\n            alt: '[神马]'\n        }, {\n            src: 'http://img.t.sinajs.cn/t35/style/images/common/face/ext/normal/bc/fuyun_thumb.gif',\n            alt: '[浮云]'\n        }]\n    }, {\n        // tab 的标题\n        title: 'emoji',\n        // type -> 'emoji' / 'image'\n        type: 'emoji',\n        // content -> 数组\n        content: '😀 😃 😄 😁 😆 😅 😂 😊 😇 🙂 🙃 😉 😓 😪 😴 🙄 🤔 😬 🤐'.split(/\\s/)\n    }],\n\n    // 编辑区域的 z-index\n    zIndex: 10000,\n\n    // 是否开启 debug 模式（debug 模式下错误会 throw error 形式抛出）\n    debug: false,\n\n    // 插入链接时候的格式校验\n    linkCheck: function linkCheck(text, link) {\n        // text 是插入的文字\n        // link 是插入的链接\n        return true; // 返回 true 即表示成功\n        // return '校验失败' // 返回字符串即表示失败的提示信息\n    },\n\n    // 插入网络图片的校验\n    linkImgCheck: function linkImgCheck(src) {\n        // src 即图片的地址\n        return true; // 返回 true 即表示成功\n        // return '校验失败'  // 返回字符串即表示失败的提示信息\n    },\n\n    // 粘贴过滤样式，默认开启\n    pasteFilterStyle: true,\n\n    // 粘贴内容时，忽略图片。默认关闭\n    pasteIgnoreImg: false,\n\n    // 对粘贴的文字进行自定义处理，返回处理后的结果。编辑器会将处理后的结果粘贴到编辑区域中。\n    // IE 暂时不支持\n    pasteTextHandle: function pasteTextHandle(content) {\n        // content 即粘贴过来的内容（html 或 纯文本），可进行自定义处理然后返回\n        return content;\n    },\n\n    // onchange 事件\n    // onchange: function (html) {\n    //     // html 即变化之后的内容\n    //     console.log(html)\n    // },\n\n    // 是否显示添加网络图片的 tab\n    showLinkImg: true,\n\n    // 插入网络图片的回调\n    linkImgCallback: function linkImgCallback(url) {\n        // console.log(url)  // url 即插入图片的地址\n    },\n\n    // 默认上传图片 max size: 5M\n    uploadImgMaxSize: 5 * 1024 * 1024,\n\n    // 配置一次最多上传几个图片\n    // uploadImgMaxLength: 5,\n\n    // 上传图片，是否显示 base64 格式\n    uploadImgShowBase64: false,\n\n    // 上传图片，server 地址（如果有值，则 base64 格式的配置则失效）\n    // uploadImgServer: '/upload',\n\n    // 自定义配置 filename\n    uploadFileName: '',\n\n    // 上传图片的自定义参数\n    uploadImgParams: {\n        // token: 'abcdef12345'\n    },\n\n    // 上传图片的自定义header\n    uploadImgHeaders: {\n        // 'Accept': 'text/x-json'\n    },\n\n    // 配置 XHR withCredentials\n    withCredentials: false,\n\n    // 自定义上传图片超时时间 ms\n    uploadImgTimeout: 10000,\n\n    // 上传图片 hook \n    uploadImgHooks: {\n        // customInsert: function (insertLinkImg, result, editor) {\n        //     console.log('customInsert')\n        //     // 图片上传并返回结果，自定义插入图片的事件，而不是编辑器自动插入图片\n        //     const data = result.data1 || []\n        //     data.forEach(link => {\n        //         insertLinkImg(link)\n        //     })\n        // },\n        before: function before(xhr, editor, files) {\n            // 图片上传之前触发\n\n            // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n            // return {\n            //     prevent: true,\n            //     msg: '放弃上传'\n            // }\n        },\n        success: function success(xhr, editor, result) {\n            // 图片上传并返回结果，图片插入成功之后触发\n        },\n        fail: function fail(xhr, editor, result) {\n            // 图片上传并返回结果，但图片插入错误时触发\n        },\n        error: function error(xhr, editor) {\n            // 图片上传出错时触发\n        },\n        timeout: function timeout(xhr, editor) {\n            // 图片上传超时时触发\n        }\n    },\n\n    // 是否上传七牛云，默认为 false\n    qiniu: false\n\n};\n\n/*\n    工具\n*/\n\n// 和 UA 相关的属性\nvar UA = {\n    _ua: navigator.userAgent,\n\n    // 是否 webkit\n    isWebkit: function isWebkit() {\n        var reg = /webkit/i;\n        return reg.test(this._ua);\n    },\n\n    // 是否 IE\n    isIE: function isIE() {\n        return 'ActiveXObject' in window;\n    }\n};\n\n// 遍历对象\nfunction objForEach(obj, fn) {\n    var key = void 0,\n        result = void 0;\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            result = fn.call(obj, key, obj[key]);\n            if (result === false) {\n                break;\n            }\n        }\n    }\n}\n\n// 遍历类数组\nfunction arrForEach(fakeArr, fn) {\n    var i = void 0,\n        item = void 0,\n        result = void 0;\n    var length = fakeArr.length || 0;\n    for (i = 0; i < length; i++) {\n        item = fakeArr[i];\n        result = fn.call(fakeArr, item, i);\n        if (result === false) {\n            break;\n        }\n    }\n}\n\n// 获取随机数\nfunction getRandom(prefix) {\n    return prefix + Math.random().toString().slice(2);\n}\n\n// 替换 html 特殊字符\nfunction replaceHtmlSymbol(html) {\n    if (html == null) {\n        return '';\n    }\n    return html.replace(/</gm, '&lt;').replace(/>/gm, '&gt;').replace(/\"/gm, '&quot;').replace(/(\\r\\n|\\r|\\n)/g, '<br/>');\n}\n\n// 返回百分比的格式\n\n\n// 判断是不是 function\nfunction isFunction(fn) {\n    return typeof fn === 'function';\n}\n\n/*\n    bold-menu\n*/\n// 构造函数\nfunction Bold(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-bold\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nBold.prototype = {\n    constructor: Bold,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 bold 命令\n        editor.cmd.do('bold');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('bold')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    替换多语言\n */\n\nvar replaceLang = function (editor, str) {\n    var langArgs = editor.config.langArgs || [];\n    var result = str;\n\n    langArgs.forEach(function (item) {\n        var reg = item.reg;\n        var val = item.val;\n\n        if (reg.test(result)) {\n            result = result.replace(reg, function () {\n                return val;\n            });\n        }\n    });\n\n    return result;\n};\n\n/*\n    droplist\n*/\nvar _emptyFn = function _emptyFn() {};\n\n// 构造函数\nfunction DropList(menu, opt) {\n    var _this = this;\n\n    // droplist 所依附的菜单\n    var editor = menu.editor;\n    this.menu = menu;\n    this.opt = opt;\n    // 容器\n    var $container = $('<div class=\"w-e-droplist\"></div>');\n\n    // 标题\n    var $title = opt.$title;\n    var titleHtml = void 0;\n    if ($title) {\n        // 替换多语言\n        titleHtml = $title.html();\n        titleHtml = replaceLang(editor, titleHtml);\n        $title.html(titleHtml);\n\n        $title.addClass('w-e-dp-title');\n        $container.append($title);\n    }\n\n    var list = opt.list || [];\n    var type = opt.type || 'list'; // 'list' 列表形式（如“标题”菜单） / 'inline-block' 块状形式（如“颜色”菜单）\n    var onClick = opt.onClick || _emptyFn;\n\n    // 加入 DOM 并绑定事件\n    var $list = $('<ul class=\"' + (type === 'list' ? 'w-e-list' : 'w-e-block') + '\"></ul>');\n    $container.append($list);\n    list.forEach(function (item) {\n        var $elem = item.$elem;\n\n        // 替换多语言\n        var elemHtml = $elem.html();\n        elemHtml = replaceLang(editor, elemHtml);\n        $elem.html(elemHtml);\n\n        var value = item.value;\n        var $li = $('<li class=\"w-e-item\"></li>');\n        if ($elem) {\n            $li.append($elem);\n            $list.append($li);\n            $li.on('click', function (e) {\n                onClick(value);\n\n                // 隐藏\n                _this.hideTimeoutId = setTimeout(function () {\n                    _this.hide();\n                }, 0);\n            });\n        }\n    });\n\n    // 绑定隐藏事件\n    $container.on('mouseleave', function (e) {\n        _this.hideTimeoutId = setTimeout(function () {\n            _this.hide();\n        }, 0);\n    });\n\n    // 记录属性\n    this.$container = $container;\n\n    // 基本属性\n    this._rendered = false;\n    this._show = false;\n}\n\n// 原型\nDropList.prototype = {\n    constructor: DropList,\n\n    // 显示（插入DOM）\n    show: function show() {\n        if (this.hideTimeoutId) {\n            // 清除之前的定时隐藏\n            clearTimeout(this.hideTimeoutId);\n        }\n\n        var menu = this.menu;\n        var $menuELem = menu.$elem;\n        var $container = this.$container;\n        if (this._show) {\n            return;\n        }\n        if (this._rendered) {\n            // 显示\n            $container.show();\n        } else {\n            // 加入 DOM 之前先定位位置\n            var menuHeight = $menuELem.getSizeData().height || 0;\n            var width = this.opt.width || 100; // 默认为 100\n            $container.css('margin-top', menuHeight + 'px').css('width', width + 'px');\n\n            // 加入到 DOM\n            $menuELem.append($container);\n            this._rendered = true;\n        }\n\n        // 修改属性\n        this._show = true;\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        if (this.showTimeoutId) {\n            // 清除之前的定时显示\n            clearTimeout(this.showTimeoutId);\n        }\n\n        var $container = this.$container;\n        if (!this._show) {\n            return;\n        }\n        // 隐藏并需改属性\n        $container.hide();\n        this._show = false;\n    }\n};\n\n/*\n    menu - header\n*/\n// 构造函数\nfunction Head(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-header\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>设置标题</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<h1>H1</h1>'), value: '<h1>' }, { $elem: $('<h2>H2</h2>'), value: '<h2>' }, { $elem: $('<h3>H3</h3>'), value: '<h3>' }, { $elem: $('<h4>H4</h4>'), value: '<h4>' }, { $elem: $('<h5>H5</h5>'), value: '<h5>' }, { $elem: $('<p>正文</p>'), value: '<p>' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 Head 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nHead.prototype = {\n    constructor: Head,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if (editor.$textElem.equal($selectionElem)) {\n            // 不能选中多行来设置标题，否则会出现问题\n            // 例如选中的是 <p>xxx</p><p>yyy</p> 来设置标题，设置之后会成为 <h1>xxx<br>yyy</h1> 不符合预期\n            return;\n        }\n\n        editor.cmd.do('formatBlock', value);\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^h/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - fontSize\n*/\n\n// 构造函数\nfunction FontSize(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-text-heigh\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 160,\n        $title: $('<p>字号</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span style=\"font-size: x-small;\">x-small</span>'), value: '1' }, { $elem: $('<span style=\"font-size: small;\">small</span>'), value: '2' }, { $elem: $('<span>normal</span>'), value: '3' }, { $elem: $('<span style=\"font-size: large;\">large</span>'), value: '4' }, { $elem: $('<span style=\"font-size: x-large;\">x-large</span>'), value: '5' }, { $elem: $('<span style=\"font-size: xx-large;\">xx-large</span>'), value: '6' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontSize 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontSize.prototype = {\n    constructor: FontSize,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontSize', value);\n    }\n};\n\n/*\n    menu - fontName\n*/\n\n// 构造函数\nfunction FontName(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-font\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 获取配置的字体\n    var config = editor.config;\n    var fontNames = config.fontNames || [];\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>字体</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: fontNames.map(function (fontName) {\n            return { $elem: $('<span style=\"font-family: ' + fontName + ';\">' + fontName + '</span>'), value: fontName };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 FontName 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nFontName.prototype = {\n    constructor: FontName,\n\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('fontName', value);\n    }\n};\n\n/*\n    panel\n*/\n\nvar emptyFn = function emptyFn() {};\n\n// 记录已经显示 panel 的菜单\nvar _isCreatedPanelMenus = [];\n\n// 构造函数\nfunction Panel(menu, opt) {\n    this.menu = menu;\n    this.opt = opt;\n}\n\n// 原型\nPanel.prototype = {\n    constructor: Panel,\n\n    // 显示（插入DOM）\n    show: function show() {\n        var _this = this;\n\n        var menu = this.menu;\n        if (_isCreatedPanelMenus.indexOf(menu) >= 0) {\n            // 该菜单已经创建了 panel 不能再创建\n            return;\n        }\n\n        var editor = menu.editor;\n        var $body = $('body');\n        var $textContainerElem = editor.$textContainerElem;\n        var opt = this.opt;\n\n        // panel 的容器\n        var $container = $('<div class=\"w-e-panel-container\"></div>');\n        var width = opt.width || 300; // 默认 300px\n        $container.css('width', width + 'px').css('margin-left', (0 - width) / 2 + 'px');\n\n        // 添加关闭按钮\n        var $closeBtn = $('<i class=\"w-e-icon-close w-e-panel-close\"></i>');\n        $container.append($closeBtn);\n        $closeBtn.on('click', function () {\n            _this.hide();\n        });\n\n        // 准备 tabs 容器\n        var $tabTitleContainer = $('<ul class=\"w-e-panel-tab-title\"></ul>');\n        var $tabContentContainer = $('<div class=\"w-e-panel-tab-content\"></div>');\n        $container.append($tabTitleContainer).append($tabContentContainer);\n\n        // 设置高度\n        var height = opt.height;\n        if (height) {\n            $tabContentContainer.css('height', height + 'px').css('overflow-y', 'auto');\n        }\n\n        // tabs\n        var tabs = opt.tabs || [];\n        var tabTitleArr = [];\n        var tabContentArr = [];\n        tabs.forEach(function (tab, tabIndex) {\n            if (!tab) {\n                return;\n            }\n            var title = tab.title || '';\n            var tpl = tab.tpl || '';\n\n            // 替换多语言\n            title = replaceLang(editor, title);\n            tpl = replaceLang(editor, tpl);\n\n            // 添加到 DOM\n            var $title = $('<li class=\"w-e-item\">' + title + '</li>');\n            $tabTitleContainer.append($title);\n            var $content = $(tpl);\n            $tabContentContainer.append($content);\n\n            // 记录到内存\n            $title._index = tabIndex;\n            tabTitleArr.push($title);\n            tabContentArr.push($content);\n\n            // 设置 active 项\n            if (tabIndex === 0) {\n                $title._active = true;\n                $title.addClass('w-e-active');\n            } else {\n                $content.hide();\n            }\n\n            // 绑定 tab 的事件\n            $title.on('click', function (e) {\n                if ($title._active) {\n                    return;\n                }\n                // 隐藏所有的 tab\n                tabTitleArr.forEach(function ($title) {\n                    $title._active = false;\n                    $title.removeClass('w-e-active');\n                });\n                tabContentArr.forEach(function ($content) {\n                    $content.hide();\n                });\n\n                // 显示当前的 tab\n                $title._active = true;\n                $title.addClass('w-e-active');\n                $content.show();\n            });\n        });\n\n        // 绑定关闭事件\n        $container.on('click', function (e) {\n            // 点击时阻止冒泡\n            e.stopPropagation();\n        });\n        $body.on('click', function (e) {\n            _this.hide();\n        });\n\n        // 添加到 DOM\n        $textContainerElem.append($container);\n\n        // 绑定 opt 的事件，只有添加到 DOM 之后才能绑定成功\n        tabs.forEach(function (tab, index) {\n            if (!tab) {\n                return;\n            }\n            var events = tab.events || [];\n            events.forEach(function (event) {\n                var selector = event.selector;\n                var type = event.type;\n                var fn = event.fn || emptyFn;\n                var $content = tabContentArr[index];\n                $content.find(selector).on(type, function (e) {\n                    e.stopPropagation();\n                    var needToHide = fn(e);\n                    // 执行完事件之后，是否要关闭 panel\n                    if (needToHide) {\n                        _this.hide();\n                    }\n                });\n            });\n        });\n\n        // focus 第一个 elem\n        var $inputs = $container.find('input[type=text],textarea');\n        if ($inputs.length) {\n            $inputs.get(0).focus();\n        }\n\n        // 添加到属性\n        this.$container = $container;\n\n        // 隐藏其他 panel\n        this._hideOtherPanels();\n        // 记录该 menu 已经创建了 panel\n        _isCreatedPanelMenus.push(menu);\n    },\n\n    // 隐藏（移除DOM）\n    hide: function hide() {\n        var menu = this.menu;\n        var $container = this.$container;\n        if ($container) {\n            $container.remove();\n        }\n\n        // 将该 menu 记录中移除\n        _isCreatedPanelMenus = _isCreatedPanelMenus.filter(function (item) {\n            if (item === menu) {\n                return false;\n            } else {\n                return true;\n            }\n        });\n    },\n\n    // 一个 panel 展示时，隐藏其他 panel\n    _hideOtherPanels: function _hideOtherPanels() {\n        if (!_isCreatedPanelMenus.length) {\n            return;\n        }\n        _isCreatedPanelMenus.forEach(function (menu) {\n            var panel = menu.panel || {};\n            if (panel.hide) {\n                panel.hide();\n            }\n        });\n    }\n};\n\n/*\n    menu - link\n*/\n// 构造函数\nfunction Link(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-link\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nLink.prototype = {\n    constructor: Link,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $linkelem = void 0;\n\n        if (this._active) {\n            // 当前选区在链接里面\n            $linkelem = editor.selection.getSelectionContainerElem();\n            if (!$linkelem) {\n                return;\n            }\n            // 将该元素都包含在选取之内，以便后面整体替换\n            editor.selection.createRangeByElem($linkelem);\n            editor.selection.restoreSelection();\n            // 显示 panel\n            this._createPanel($linkelem.text(), $linkelem.attr('href'));\n        } else {\n            // 当前选区不在链接里面\n            if (editor.selection.isSelectionEmpty()) {\n                // 选区是空的，未选中内容\n                this._createPanel('', '');\n            } else {\n                // 选中内容了\n                this._createPanel(editor.selection.getSelectionText(), '');\n            }\n        }\n    },\n\n    // 创建 panel\n    _createPanel: function _createPanel(text, link) {\n        var _this = this;\n\n        // panel 中需要用到的id\n        var inputLinkId = getRandom('input-link');\n        var inputTextId = getRandom('input-text');\n        var btnOkId = getRandom('btn-ok');\n        var btnDelId = getRandom('btn-del');\n\n        // 是否显示“删除链接”\n        var delBtnDisplay = this._active ? 'inline-block' : 'none';\n\n        // 初始化并显示 panel\n        var panel = new Panel(this, {\n            width: 300,\n            // panel 中可包含多个 tab\n            tabs: [{\n                // tab 的标题\n                title: '链接',\n                // 模板\n                tpl: '<div>\\n                            <input id=\"' + inputTextId + '\" type=\"text\" class=\"block\" value=\"' + text + '\" placeholder=\"\\u94FE\\u63A5\\u6587\\u5B57\"/></td>\\n                            <input id=\"' + inputLinkId + '\" type=\"text\" class=\"block\" value=\"' + link + '\" placeholder=\"http://...\"/></td>\\n                            <div class=\"w-e-button-container\">\\n                                <button id=\"' + btnOkId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                                <button id=\"' + btnDelId + '\" class=\"gray right\" style=\"display:' + delBtnDisplay + '\">\\u5220\\u9664\\u94FE\\u63A5</button>\\n                            </div>\\n                        </div>',\n                // 事件绑定\n                events: [\n                // 插入链接\n                {\n                    selector: '#' + btnOkId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行插入链接\n                        var $link = $('#' + inputLinkId);\n                        var $text = $('#' + inputTextId);\n                        var link = $link.val();\n                        var text = $text.val();\n                        _this._insertLink(text, link);\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                },\n                // 删除链接\n                {\n                    selector: '#' + btnDelId,\n                    type: 'click',\n                    fn: function fn() {\n                        // 执行删除链接\n                        _this._delLink();\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // tab end\n            ] // tabs end\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 删除当前链接\n    _delLink: function _delLink() {\n        if (!this._active) {\n            return;\n        }\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var selectionText = editor.selection.getSelectionText();\n        editor.cmd.do('insertHTML', '<span>' + selectionText + '</span>');\n    },\n\n    // 插入链接\n    _insertLink: function _insertLink(text, link) {\n        var editor = this.editor;\n        var config = editor.config;\n        var linkCheck = config.linkCheck;\n        var checkResult = true; // 默认为 true\n        if (linkCheck && typeof linkCheck === 'function') {\n            checkResult = linkCheck(text, link);\n        }\n        if (checkResult === true) {\n            editor.cmd.do('insertHTML', '<a href=\"' + link + '\" target=\"_blank\">' + text + '</a>');\n        } else {\n            alert(checkResult);\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        if ($selectionELem.getNodeName() === 'A') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    italic-menu\n*/\n// 构造函数\nfunction Italic(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-italic\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nItalic.prototype = {\n    constructor: Italic,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 italic 命令\n        editor.cmd.do('italic');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('italic')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    redo-menu\n*/\n// 构造函数\nfunction Redo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-redo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nRedo.prototype = {\n    constructor: Redo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 redo 命令\n        editor.cmd.do('redo');\n    }\n};\n\n/*\n    strikeThrough-menu\n*/\n// 构造函数\nfunction StrikeThrough(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-strikethrough\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nStrikeThrough.prototype = {\n    constructor: StrikeThrough,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 strikeThrough 命令\n        editor.cmd.do('strikeThrough');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('strikeThrough')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    underline-menu\n*/\n// 构造函数\nfunction Underline(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-underline\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUnderline.prototype = {\n    constructor: Underline,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n\n        if (isSeleEmpty) {\n            // 选区是空的，插入并选中一个“空白”\n            editor.selection.createEmptyRange();\n        }\n\n        // 执行 underline 命令\n        editor.cmd.do('underline');\n\n        if (isSeleEmpty) {\n            // 需要将选取折叠起来\n            editor.selection.collapseRange();\n            editor.selection.restoreSelection();\n        }\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('underline')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    undo-menu\n*/\n// 构造函数\nfunction Undo(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-undo\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nUndo.prototype = {\n    constructor: Undo,\n\n    // 点击事件\n    onClick: function onClick(e) {\n        // 点击菜单将触发这里\n\n        var editor = this.editor;\n\n        // 执行 undo 命令\n        editor.cmd.do('undo');\n    }\n};\n\n/*\n    menu - list\n*/\n// 构造函数\nfunction List(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-list2\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>设置列表</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-list-numbered\"></i> 有序列表</span>'), value: 'insertOrderedList' }, { $elem: $('<span><i class=\"w-e-icon-list2\"></i> 无序列表</span>'), value: 'insertUnorderedList' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nList.prototype = {\n    constructor: List,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        editor.selection.restoreSelection();\n        if (editor.cmd.queryCommandState(value)) {\n            return;\n        }\n        editor.cmd.do(value);\n\n        // 验证列表是否被包裹在 <p> 之内\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        if ($selectionElem.getNodeName() === 'LI') {\n            $selectionElem = $selectionElem.parent();\n        }\n        if (/^ol|ul$/i.test($selectionElem.getNodeName()) === false) {\n            return;\n        }\n        if ($selectionElem.equal($textElem)) {\n            // 证明是顶级标签，没有被 <p> 包裹\n            return;\n        }\n        var $parent = $selectionElem.parent();\n        if ($parent.equal($textElem)) {\n            // $parent 是顶级标签，不能删除\n            return;\n        }\n\n        $selectionElem.insertAfter($parent);\n        $parent.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor.cmd.queryCommandState('insertUnOrderedList') || editor.cmd.queryCommandState('insertOrderedList')) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - justify\n*/\n// 构造函数\nfunction Justify(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paragraph-left\"></i></div>');\n    this.type = 'droplist';\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 100,\n        $title: $('<p>对齐方式</p>'),\n        type: 'list', // droplist 以列表形式展示\n        list: [{ $elem: $('<span><i class=\"w-e-icon-paragraph-left\"></i> 靠左</span>'), value: 'justifyLeft' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-center\"></i> 居中</span>'), value: 'justifyCenter' }, { $elem: $('<span><i class=\"w-e-icon-paragraph-right\"></i> 靠右</span>'), value: 'justifyRight' }],\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 List 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nJustify.prototype = {\n    constructor: Justify,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do(value);\n    }\n};\n\n/*\n    menu - Forecolor\n*/\n// 构造函数\nfunction ForeColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-pencil2\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>文字颜色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-pencil2\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 ForeColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nForeColor.prototype = {\n    constructor: ForeColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('foreColor', value);\n    }\n};\n\n/*\n    menu - BackColor\n*/\n// 构造函数\nfunction BackColor(editor) {\n    var _this = this;\n\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-paint-brush\"></i></div>');\n    this.type = 'droplist';\n\n    // 获取配置的颜色\n    var config = editor.config;\n    var colors = config.colors || [];\n\n    // 当前是否 active 状态\n    this._active = false;\n\n    // 初始化 droplist\n    this.droplist = new DropList(this, {\n        width: 120,\n        $title: $('<p>背景色</p>'),\n        type: 'inline-block', // droplist 内容以 block 形式展示\n        list: colors.map(function (color) {\n            return { $elem: $('<i style=\"color:' + color + ';\" class=\"w-e-icon-paint-brush\"></i>'), value: color };\n        }),\n        onClick: function onClick(value) {\n            // 注意 this 是指向当前的 BackColor 对象\n            _this._command(value);\n        }\n    });\n}\n\n// 原型\nBackColor.prototype = {\n    constructor: BackColor,\n\n    // 执行命令\n    _command: function _command(value) {\n        var editor = this.editor;\n        editor.cmd.do('backColor', value);\n    }\n};\n\n/*\n    menu - quote\n*/\n// 构造函数\nfunction Quote(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-quotes-left\"></i>\\n        </div>');\n    this.type = 'click';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nQuote.prototype = {\n    constructor: Quote,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $selectionElem = editor.selection.getSelectionContainerElem();\n        var nodeName = $selectionElem.getNodeName();\n\n        if (!UA.isIE()) {\n            if (nodeName === 'BLOCKQUOTE') {\n                // 撤销 quote\n                editor.cmd.do('formatBlock', '<P>');\n            } else {\n                // 转换为 quote\n                editor.cmd.do('formatBlock', '<BLOCKQUOTE>');\n            }\n            return;\n        }\n\n        // IE 中不支持 formatBlock <BLOCKQUOTE> ，要用其他方式兼容\n        var content = void 0,\n            $targetELem = void 0;\n        if (nodeName === 'P') {\n            // 将 P 转换为 quote\n            content = $selectionElem.text();\n            $targetELem = $('<blockquote>' + content + '</blockquote>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n            return;\n        }\n        if (nodeName === 'BLOCKQUOTE') {\n            // 撤销 quote\n            content = $selectionElem.text();\n            $targetELem = $('<p>' + content + '</p>');\n            $targetELem.insertAfter($selectionElem);\n            $selectionElem.remove();\n        }\n    },\n\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var reg = /^BLOCKQUOTE$/i;\n        var cmdValue = editor.cmd.queryCommandValue('formatBlock');\n        if (reg.test(cmdValue)) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - code\n*/\n// 构造函数\nfunction Code(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-terminal\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nCode.prototype = {\n    constructor: Code,\n\n    onClick: function onClick(e) {\n        var editor = this.editor;\n        var $startElem = editor.selection.getSelectionStartElem();\n        var $endElem = editor.selection.getSelectionEndElem();\n        var isSeleEmpty = editor.selection.isSelectionEmpty();\n        var selectionText = editor.selection.getSelectionText();\n        var $code = void 0;\n\n        if (!$startElem.equal($endElem)) {\n            // 跨元素选择，不做处理\n            editor.selection.restoreSelection();\n            return;\n        }\n        if (!isSeleEmpty) {\n            // 选取不是空，用 <code> 包裹即可\n            $code = $('<code>' + selectionText + '</code>');\n            editor.cmd.do('insertElem', $code);\n            editor.selection.createRangeByElem($code, false);\n            editor.selection.restoreSelection();\n            return;\n        }\n\n        // 选取是空，且没有夸元素选择，则插入 <pre><code></code></prev>\n        if (this._active) {\n            // 选中状态，将编辑内容\n            this._createPanel($startElem.html());\n        } else {\n            // 未选中状态，将创建内容\n            this._createPanel();\n        }\n    },\n\n    _createPanel: function _createPanel(value) {\n        var _this = this;\n\n        // value - 要编辑的内容\n        value = value || '';\n        var type = !value ? 'new' : 'edit';\n        var textId = getRandom('texxt');\n        var btnId = getRandom('btn');\n\n        var panel = new Panel(this, {\n            width: 500,\n            // 一个 Panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入代码',\n                // 模板\n                tpl: '<div>\\n                        <textarea id=\"' + textId + '\" style=\"height:145px;;\">' + value + '</textarea>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    <div>',\n                // 事件绑定\n                events: [\n                // 插入代码\n                {\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textId);\n                        var text = $text.val() || $text.html();\n                        text = replaceHtmlSymbol(text);\n                        if (type === 'new') {\n                            // 新插入\n                            _this._insertCode(text);\n                        } else {\n                            // 编辑更新\n                            _this._updateCode(text);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // new Panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入代码\n    _insertCode: function _insertCode(value) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', '<pre><code>' + value + '</code></pre><p><br></p>');\n    },\n\n    // 更新代码\n    _updateCode: function _updateCode(value) {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        $selectionELem.html(value);\n        editor.selection.restoreSelection();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $parentElem = $selectionELem.parent();\n        if ($selectionELem.getNodeName() === 'CODE' && $parentElem.getNodeName() === 'PRE') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - emoticon\n*/\n// 构造函数\nfunction Emoticon(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\">\\n            <i class=\"w-e-icon-happy\"></i>\\n        </div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nEmoticon.prototype = {\n    constructor: Emoticon,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config;\n        // 获取表情配置\n        var emotions = config.emotions || [];\n\n        // 创建表情 dropPanel 的配置\n        var tabConfig = [];\n        emotions.forEach(function (emotData) {\n            var emotType = emotData.type;\n            var content = emotData.content || [];\n\n            // 这一组表情最终拼接出来的 html\n            var faceHtml = '';\n\n            // emoji 表情\n            if (emotType === 'emoji') {\n                content.forEach(function (item) {\n                    if (item) {\n                        faceHtml += '<span class=\"w-e-item\">' + item + '</span>';\n                    }\n                });\n            }\n            // 图片表情\n            if (emotType === 'image') {\n                content.forEach(function (item) {\n                    var src = item.src;\n                    var alt = item.alt;\n                    if (src) {\n                        // 加一个 data-w-e 属性，点击图片的时候不再提示编辑图片\n                        faceHtml += '<span class=\"w-e-item\"><img src=\"' + src + '\" alt=\"' + alt + '\" data-w-e=\"1\"/></span>';\n                    }\n                });\n            }\n\n            tabConfig.push({\n                title: emotData.title,\n                tpl: '<div class=\"w-e-emoticon-container\">' + faceHtml + '</div>',\n                events: [{\n                    selector: 'span.w-e-item',\n                    type: 'click',\n                    fn: function fn(e) {\n                        var target = e.target;\n                        var $target = $(target);\n                        var nodeName = $target.getNodeName();\n\n                        var insertHtml = void 0;\n                        if (nodeName === 'IMG') {\n                            // 插入图片\n                            insertHtml = $target.parent().html();\n                        } else {\n                            // 插入 emoji\n                            insertHtml = '<span>' + $target.html() + '</span>';\n                        }\n\n                        _this._insert(insertHtml);\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            });\n        });\n\n        var panel = new Panel(this, {\n            width: 300,\n            height: 200,\n            // 一个 Panel 包含多个 tab\n            tabs: tabConfig\n        });\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表情\n    _insert: function _insert(emotHtml) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', emotHtml);\n    }\n};\n\n/*\n    menu - table\n*/\n// 构造函数\nfunction Table(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-table2\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nTable.prototype = {\n    constructor: Table,\n\n    onClick: function onClick() {\n        if (this._active) {\n            // 编辑现有表格\n            this._createEditPanel();\n        } else {\n            // 插入新表格\n            this._createInsertPanel();\n        }\n    },\n\n    // 创建插入新表格的 panel\n    _createInsertPanel: function _createInsertPanel() {\n        var _this = this;\n\n        // 用到的 id\n        var btnInsertId = getRandom('btn');\n        var textRowNum = getRandom('row');\n        var textColNum = getRandom('col');\n\n        var panel = new Panel(this, {\n            width: 250,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '插入表格',\n                // 模板\n                tpl: '<div>\\n                        <p style=\"text-align:left; padding:5px 0;\">\\n                            \\u521B\\u5EFA\\n                            <input id=\"' + textRowNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u884C\\n                            <input id=\"' + textColNum + '\" type=\"text\" value=\"5\" style=\"width:40px;text-align:center;\"/>\\n                            \\u5217\\u7684\\u8868\\u683C\\n                        </p>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnInsertId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 点击按钮，插入表格\n                    selector: '#' + btnInsertId,\n                    type: 'click',\n                    fn: function fn() {\n                        var rowNum = parseInt($('#' + textRowNum).val());\n                        var colNum = parseInt($('#' + textColNum).val());\n\n                        if (rowNum && colNum && rowNum > 0 && colNum > 0) {\n                            // form 数据有效\n                            _this._insert(rowNum, colNum);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 展示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入表格\n    _insert: function _insert(rowNum, colNum) {\n        // 拼接 table 模板\n        var r = void 0,\n            c = void 0;\n        var html = '<table border=\"0\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\">';\n        for (r = 0; r < rowNum; r++) {\n            html += '<tr>';\n            if (r === 0) {\n                for (c = 0; c < colNum; c++) {\n                    html += '<th>&nbsp;</th>';\n                }\n            } else {\n                for (c = 0; c < colNum; c++) {\n                    html += '<td>&nbsp;</td>';\n                }\n            }\n            html += '</tr>';\n        }\n        html += '</table><p><br></p>';\n\n        // 执行命令\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', html);\n\n        // 防止 firefox 下出现 resize 的控制点\n        editor.cmd.do('enableObjectResizing', false);\n        editor.cmd.do('enableInlineTableEditing', false);\n    },\n\n    // 创建编辑表格的 panel\n    _createEditPanel: function _createEditPanel() {\n        var _this2 = this;\n\n        // 可用的 id\n        var addRowBtnId = getRandom('add-row');\n        var addColBtnId = getRandom('add-col');\n        var delRowBtnId = getRandom('del-row');\n        var delColBtnId = getRandom('del-col');\n        var delTableBtnId = getRandom('del-table');\n\n        // 创建 panel 对象\n        var panel = new Panel(this, {\n            width: 320,\n            // panel 包含多个 tab\n            tabs: [{\n                // 标题\n                title: '编辑表格',\n                // 模板\n                tpl: '<div>\\n                        <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                            <button id=\"' + addRowBtnId + '\" class=\"left\">\\u589E\\u52A0\\u884C</button>\\n                            <button id=\"' + delRowBtnId + '\" class=\"red left\">\\u5220\\u9664\\u884C</button>\\n                            <button id=\"' + addColBtnId + '\" class=\"left\">\\u589E\\u52A0\\u5217</button>\\n                            <button id=\"' + delColBtnId + '\" class=\"red left\">\\u5220\\u9664\\u5217</button>\\n                        </div>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + delTableBtnId + '\" class=\"gray left\">\\u5220\\u9664\\u8868\\u683C</button>\\n                        </dv>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    // 增加行\n                    selector: '#' + addRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 增加列\n                    selector: '#' + addColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._addCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除行\n                    selector: '#' + delRowBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delRow();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除列\n                    selector: '#' + delColBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delCol();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }, {\n                    // 删除表格\n                    selector: '#' + delTableBtnId,\n                    type: 'click',\n                    fn: function fn() {\n                        _this2._delTable();\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            }]\n        });\n        // 显示 panel\n        panel.show();\n    },\n\n    // 获取选中的单元格的位置信息\n    _getLocationData: function _getLocationData() {\n        var result = {};\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName !== 'TD' && nodeName !== 'TH') {\n            return;\n        }\n\n        // 获取 td index\n        var $tr = $selectionELem.parent();\n        var $tds = $tr.children();\n        var tdLength = $tds.length;\n        $tds.forEach(function (td, index) {\n            if (td === $selectionELem[0]) {\n                // 记录并跳出循环\n                result.td = {\n                    index: index,\n                    elem: td,\n                    length: tdLength\n                };\n                return false;\n            }\n        });\n\n        // 获取 tr index\n        var $tbody = $tr.parent();\n        var $trs = $tbody.children();\n        var trLength = $trs.length;\n        $trs.forEach(function (tr, index) {\n            if (tr === $tr[0]) {\n                // 记录并跳出循环\n                result.tr = {\n                    index: index,\n                    elem: tr,\n                    length: trLength\n                };\n                return false;\n            }\n        });\n\n        // 返回结果\n        return result;\n    },\n\n    // 增加行\n    _addRow: function _addRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        var tdData = locationData.td;\n        var tdLength = tdData.length;\n\n        // 拼接即将插入的字符串\n        var newTr = document.createElement('tr');\n        var tpl = '',\n            i = void 0;\n        for (i = 0; i < tdLength; i++) {\n            tpl += '<td>&nbsp;</td>';\n        }\n        newTr.innerHTML = tpl;\n        // 插入\n        $(newTr).insertAfter($currentTr);\n    },\n\n    // 增加列\n    _addCol: function _addCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            var name = $currentTd.getNodeName().toLowerCase();\n\n            // new 一个 td，并插入\n            var newTd = document.createElement(name);\n            $(newTd).insertAfter($currentTd);\n        });\n    },\n\n    // 删除行\n    _delRow: function _delRow() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var $currentTr = $(trData.elem);\n        $currentTr.remove();\n    },\n\n    // 删除列\n    _delCol: function _delCol() {\n        // 获取当前单元格的位置信息\n        var locationData = this._getLocationData();\n        if (!locationData) {\n            return;\n        }\n        var trData = locationData.tr;\n        var tdData = locationData.td;\n        var tdIndex = tdData.index;\n        var $currentTr = $(trData.elem);\n        var $trParent = $currentTr.parent();\n        var $trs = $trParent.children();\n\n        // 遍历所有行\n        $trs.forEach(function (tr) {\n            var $tr = $(tr);\n            var $tds = $tr.children();\n            var $currentTd = $tds.get(tdIndex);\n            // 删除\n            $currentTd.remove();\n        });\n    },\n\n    // 删除表格\n    _delTable: function _delTable() {\n        var editor = this.editor;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var $table = $selectionELem.parentUntil('table');\n        if (!$table) {\n            return;\n        }\n        $table.remove();\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        var $selectionELem = editor.selection.getSelectionContainerElem();\n        if (!$selectionELem) {\n            return;\n        }\n        var nodeName = $selectionELem.getNodeName();\n        if (nodeName === 'TD' || nodeName === 'TH') {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    menu - video\n*/\n// 构造函数\nfunction Video(editor) {\n    this.editor = editor;\n    this.$elem = $('<div class=\"w-e-menu\"><i class=\"w-e-icon-play\"></i></div>');\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nVideo.prototype = {\n    constructor: Video,\n\n    onClick: function onClick() {\n        this._createPanel();\n    },\n\n    _createPanel: function _createPanel() {\n        var _this = this;\n\n        // 创建 id\n        var textValId = getRandom('text-val');\n        var btnId = getRandom('btn');\n\n        // 创建 panel\n        var panel = new Panel(this, {\n            width: 350,\n            // 一个 panel 多个 tab\n            tabs: [{\n                // 标题\n                title: '插入视频',\n                // 模板\n                tpl: '<div>\\n                        <input id=\"' + textValId + '\" type=\"text\" class=\"block\" placeholder=\"\\u683C\\u5F0F\\u5982\\uFF1A<iframe src=... ></iframe>\"/>\\n                        <div class=\"w-e-button-container\">\\n                            <button id=\"' + btnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                        </div>\\n                    </div>',\n                // 事件绑定\n                events: [{\n                    selector: '#' + btnId,\n                    type: 'click',\n                    fn: function fn() {\n                        var $text = $('#' + textValId);\n                        var val = $text.val().trim();\n\n                        // 测试用视频地址\n                        // <iframe height=498 width=510 src='http://player.youku.com/embed/XMjcwMzc3MzM3Mg==' frameborder=0 'allowfullscreen'></iframe>\n\n                        if (val) {\n                            // 插入视频\n                            _this._insert(val);\n                        }\n\n                        // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                        return true;\n                    }\n                }]\n            } // first tab end\n            ] // tabs end\n        }); // panel end\n\n        // 显示 panel\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 插入视频\n    _insert: function _insert(val) {\n        var editor = this.editor;\n        editor.cmd.do('insertHTML', val + '<p><br></p>');\n    }\n};\n\n/*\n    menu - img\n*/\n// 构造函数\nfunction Image(editor) {\n    this.editor = editor;\n    var imgMenuId = getRandom('w-e-img');\n    this.$elem = $('<div class=\"w-e-menu\" id=\"' + imgMenuId + '\"><i class=\"w-e-icon-image\"></i></div>');\n    editor.imgMenuId = imgMenuId;\n    this.type = 'panel';\n\n    // 当前是否 active 状态\n    this._active = false;\n}\n\n// 原型\nImage.prototype = {\n    constructor: Image,\n\n    onClick: function onClick() {\n        var editor = this.editor;\n        var config = editor.config;\n        if (config.qiniu) {\n            return;\n        }\n        if (this._active) {\n            this._createEditPanel();\n        } else {\n            this._createInsertPanel();\n        }\n    },\n\n    _createEditPanel: function _createEditPanel() {\n        var editor = this.editor;\n\n        // id\n        var width30 = getRandom('width-30');\n        var width50 = getRandom('width-50');\n        var width100 = getRandom('width-100');\n        var delBtn = getRandom('del-btn');\n\n        // tab 配置\n        var tabsConfig = [{\n            title: '编辑图片',\n            tpl: '<div>\\n                    <div class=\"w-e-button-container\" style=\"border-bottom:1px solid #f1f1f1;padding-bottom:5px;margin-bottom:5px;\">\\n                        <span style=\"float:left;font-size:14px;margin:4px 5px 0 5px;color:#333;\">\\u6700\\u5927\\u5BBD\\u5EA6\\uFF1A</span>\\n                        <button id=\"' + width30 + '\" class=\"left\">30%</button>\\n                        <button id=\"' + width50 + '\" class=\"left\">50%</button>\\n                        <button id=\"' + width100 + '\" class=\"left\">100%</button>\\n                    </div>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + delBtn + '\" class=\"gray left\">\\u5220\\u9664\\u56FE\\u7247</button>\\n                    </dv>\\n                </div>',\n            events: [{\n                selector: '#' + width30,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '30%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width50,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '50%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + width100,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.css('max-width', '100%');\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }, {\n                selector: '#' + delBtn,\n                type: 'click',\n                fn: function fn() {\n                    var $img = editor._selectedImg;\n                    if ($img) {\n                        $img.remove();\n                    }\n                    // 返回 true，表示该事件执行完之后，panel 要关闭。否则 panel 不会关闭\n                    return true;\n                }\n            }]\n        }];\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfig\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    _createInsertPanel: function _createInsertPanel() {\n        var editor = this.editor;\n        var uploadImg = editor.uploadImg;\n        var config = editor.config;\n\n        // id\n        var upTriggerId = getRandom('up-trigger');\n        var upFileId = getRandom('up-file');\n        var linkUrlId = getRandom('link-url');\n        var linkBtnId = getRandom('link-btn');\n\n        // tabs 的配置\n        var tabsConfig = [{\n            title: '上传图片',\n            tpl: '<div class=\"w-e-up-img-container\">\\n                    <div id=\"' + upTriggerId + '\" class=\"w-e-up-btn\">\\n                        <i class=\"w-e-icon-upload2\"></i>\\n                    </div>\\n                    <div style=\"display:none;\">\\n                        <input id=\"' + upFileId + '\" type=\"file\" multiple=\"multiple\" accept=\"image/jpg,image/jpeg,image/png,image/gif,image/bmp\"/>\\n                    </div>\\n                </div>',\n            events: [{\n                // 触发选择图片\n                selector: '#' + upTriggerId,\n                type: 'click',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (fileElem) {\n                        fileElem.click();\n                    } else {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n                }\n            }, {\n                // 选择图片完毕\n                selector: '#' + upFileId,\n                type: 'change',\n                fn: function fn() {\n                    var $file = $('#' + upFileId);\n                    var fileElem = $file[0];\n                    if (!fileElem) {\n                        // 返回 true 可关闭 panel\n                        return true;\n                    }\n\n                    // 获取选中的 file 对象列表\n                    var fileList = fileElem.files;\n                    if (fileList.length) {\n                        uploadImg.uploadImg(fileList);\n                    }\n\n                    // 返回 true 可关闭 panel\n                    return true;\n                }\n            }]\n        }, // first tab end\n        {\n            title: '网络图片',\n            tpl: '<div>\\n                    <input id=\"' + linkUrlId + '\" type=\"text\" class=\"block\" placeholder=\"\\u56FE\\u7247\\u94FE\\u63A5\"/></td>\\n                    <div class=\"w-e-button-container\">\\n                        <button id=\"' + linkBtnId + '\" class=\"right\">\\u63D2\\u5165</button>\\n                    </div>\\n                </div>',\n            events: [{\n                selector: '#' + linkBtnId,\n                type: 'click',\n                fn: function fn() {\n                    var $linkUrl = $('#' + linkUrlId);\n                    var url = $linkUrl.val().trim();\n\n                    if (url) {\n                        uploadImg.insertLinkImg(url);\n                    }\n\n                    // 返回 true 表示函数执行结束之后关闭 panel\n                    return true;\n                }\n            }]\n        } // second tab end\n        ]; // tabs end\n\n        // 判断 tabs 的显示\n        var tabsConfigResult = [];\n        if ((config.uploadImgShowBase64 || config.uploadImgServer || config.customUploadImg) && window.FileReader) {\n            // 显示“上传图片”\n            tabsConfigResult.push(tabsConfig[0]);\n        }\n        if (config.showLinkImg) {\n            // 显示“网络图片”\n            tabsConfigResult.push(tabsConfig[1]);\n        }\n\n        // 创建 panel 并显示\n        var panel = new Panel(this, {\n            width: 300,\n            tabs: tabsConfigResult\n        });\n        panel.show();\n\n        // 记录属性\n        this.panel = panel;\n    },\n\n    // 试图改变 active 状态\n    tryChangeActive: function tryChangeActive(e) {\n        var editor = this.editor;\n        var $elem = this.$elem;\n        if (editor._selectedImg) {\n            this._active = true;\n            $elem.addClass('w-e-active');\n        } else {\n            this._active = false;\n            $elem.removeClass('w-e-active');\n        }\n    }\n};\n\n/*\n    所有菜单的汇总\n*/\n\n// 存储菜单的构造函数\nvar MenuConstructors = {};\n\nMenuConstructors.bold = Bold;\n\nMenuConstructors.head = Head;\n\nMenuConstructors.fontSize = FontSize;\n\nMenuConstructors.fontName = FontName;\n\nMenuConstructors.link = Link;\n\nMenuConstructors.italic = Italic;\n\nMenuConstructors.redo = Redo;\n\nMenuConstructors.strikeThrough = StrikeThrough;\n\nMenuConstructors.underline = Underline;\n\nMenuConstructors.undo = Undo;\n\nMenuConstructors.list = List;\n\nMenuConstructors.justify = Justify;\n\nMenuConstructors.foreColor = ForeColor;\n\nMenuConstructors.backColor = BackColor;\n\nMenuConstructors.quote = Quote;\n\nMenuConstructors.code = Code;\n\nMenuConstructors.emoticon = Emoticon;\n\nMenuConstructors.table = Table;\n\nMenuConstructors.video = Video;\n\nMenuConstructors.image = Image;\n\n/*\n    菜单集合\n*/\n// 构造函数\nfunction Menus(editor) {\n    this.editor = editor;\n    this.menus = {};\n}\n\n// 修改原型\nMenus.prototype = {\n    constructor: Menus,\n\n    // 初始化菜单\n    init: function init() {\n        var _this = this;\n\n        var editor = this.editor;\n        var config = editor.config || {};\n        var configMenus = config.menus || []; // 获取配置中的菜单\n\n        // 根据配置信息，创建菜单\n        configMenus.forEach(function (menuKey) {\n            var MenuConstructor = MenuConstructors[menuKey];\n            if (MenuConstructor && typeof MenuConstructor === 'function') {\n                // 创建单个菜单\n                _this.menus[menuKey] = new MenuConstructor(editor);\n            }\n        });\n\n        // 添加到菜单栏\n        this._addToToolbar();\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 添加到菜单栏\n    _addToToolbar: function _addToToolbar() {\n        var editor = this.editor;\n        var $toolbarElem = editor.$toolbarElem;\n        var menus = this.menus;\n        var config = editor.config;\n        // config.zIndex 是配置的编辑区域的 z-index，菜单的 z-index 得在其基础上 +1\n        var zIndex = config.zIndex + 1;\n        objForEach(menus, function (key, menu) {\n            var $elem = menu.$elem;\n            if ($elem) {\n                // 设置 z-index\n                $elem.css('z-index', zIndex);\n                $toolbarElem.append($elem);\n            }\n        });\n    },\n\n    // 绑定菜单 click mouseenter 事件\n    _bindEvent: function _bindEvent() {\n        var menus = this.menus;\n        var editor = this.editor;\n        objForEach(menus, function (key, menu) {\n            var type = menu.type;\n            if (!type) {\n                return;\n            }\n            var $elem = menu.$elem;\n            var droplist = menu.droplist;\n            var panel = menu.panel;\n\n            // 点击类型，例如 bold\n            if (type === 'click' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    menu.onClick(e);\n                });\n            }\n\n            // 下拉框，例如 head\n            if (type === 'droplist' && droplist) {\n                $elem.on('mouseenter', function (e) {\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 显示\n                    droplist.showTimeoutId = setTimeout(function () {\n                        droplist.show();\n                    }, 200);\n                }).on('mouseleave', function (e) {\n                    // 隐藏\n                    droplist.hideTimeoutId = setTimeout(function () {\n                        droplist.hide();\n                    }, 0);\n                });\n            }\n\n            // 弹框类型，例如 link\n            if (type === 'panel' && menu.onClick) {\n                $elem.on('click', function (e) {\n                    e.stopPropagation();\n                    if (editor.selection.getRange() == null) {\n                        return;\n                    }\n                    // 在自定义事件中显示 panel\n                    menu.onClick(e);\n                });\n            }\n        });\n    },\n\n    // 尝试修改菜单状态\n    changeActive: function changeActive() {\n        var menus = this.menus;\n        objForEach(menus, function (key, menu) {\n            if (menu.tryChangeActive) {\n                setTimeout(function () {\n                    menu.tryChangeActive();\n                }, 100);\n            }\n        });\n    }\n};\n\n/*\n    粘贴信息的处理\n*/\n\n// 获取粘贴的纯文本\nfunction getPasteText(e) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n    }\n\n    return replaceHtmlSymbol(pasteText);\n}\n\n// 获取粘贴的html\nfunction getPasteHtml(e, filterStyle, ignoreImg) {\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData;\n    var pasteText = void 0,\n        pasteHtml = void 0;\n    if (clipboardData == null) {\n        pasteText = window.clipboardData && window.clipboardData.getData('text');\n    } else {\n        pasteText = clipboardData.getData('text/plain');\n        pasteHtml = clipboardData.getData('text/html');\n    }\n    if (!pasteHtml && pasteText) {\n        pasteHtml = '<p>' + replaceHtmlSymbol(pasteText) + '</p>';\n    }\n    if (!pasteHtml) {\n        return;\n    }\n\n    // 过滤word中状态过来的无用字符\n    var docSplitHtml = pasteHtml.split('</html>');\n    if (docSplitHtml.length === 2) {\n        pasteHtml = docSplitHtml[0];\n    }\n\n    // 过滤无用标签\n    pasteHtml = pasteHtml.replace(/<(meta|script|link).+?>/igm, '');\n    // 去掉注释\n    pasteHtml = pasteHtml.replace(/<!--.*?-->/mg, '');\n    // 过滤 data-xxx 属性\n    pasteHtml = pasteHtml.replace(/\\s?data-.+?=('|\").+?('|\")/igm, '');\n\n    if (ignoreImg) {\n        // 忽略图片\n        pasteHtml = pasteHtml.replace(/<img.+?>/igm, '');\n    }\n\n    if (filterStyle) {\n        // 过滤样式\n        pasteHtml = pasteHtml.replace(/\\s?(class|style)=('|\").*?('|\")/igm, '');\n    } else {\n        // 保留样式\n        pasteHtml = pasteHtml.replace(/\\s?class=('|\").*?('|\")/igm, '');\n    }\n\n    return pasteHtml;\n}\n\n// 获取粘贴的图片文件\nfunction getPasteImgs(e) {\n    var result = [];\n    var txt = getPasteText(e);\n    if (txt) {\n        // 有文字，就忽略图片\n        return result;\n    }\n\n    var clipboardData = e.clipboardData || e.originalEvent && e.originalEvent.clipboardData || {};\n    var items = clipboardData.items;\n    if (!items) {\n        return result;\n    }\n\n    objForEach(items, function (key, value) {\n        var type = value.type;\n        if (/image/i.test(type)) {\n            result.push(value.getAsFile());\n        }\n    });\n\n    return result;\n}\n\n/*\n    编辑区域\n*/\n\n// 获取一个 elem.childNodes 的 JSON 数据\nfunction getChildrenJSON($elem) {\n    var result = [];\n    var $children = $elem.childNodes() || []; // 注意 childNodes() 可以获取文本节点\n    $children.forEach(function (curElem) {\n        var elemResult = void 0;\n        var nodeType = curElem.nodeType;\n\n        // 文本节点\n        if (nodeType === 3) {\n            elemResult = curElem.textContent;\n            elemResult = replaceHtmlSymbol(elemResult);\n        }\n\n        // 普通 DOM 节点\n        if (nodeType === 1) {\n            elemResult = {};\n\n            // tag\n            elemResult.tag = curElem.nodeName.toLowerCase();\n            // attr\n            var attrData = [];\n            var attrList = curElem.attributes || {};\n            var attrListLength = attrList.length || 0;\n            for (var i = 0; i < attrListLength; i++) {\n                var attr = attrList[i];\n                attrData.push({\n                    name: attr.name,\n                    value: attr.value\n                });\n            }\n            elemResult.attrs = attrData;\n            // children（递归）\n            elemResult.children = getChildrenJSON($(curElem));\n        }\n\n        result.push(elemResult);\n    });\n    return result;\n}\n\n// 构造函数\nfunction Text(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nText.prototype = {\n    constructor: Text,\n\n    // 初始化\n    init: function init() {\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 清空内容\n    clear: function clear() {\n        this.html('<p><br></p>');\n    },\n\n    // 获取 设置 html\n    html: function html(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var html = void 0;\n        if (val == null) {\n            html = $textElem.html();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            html = html.replace(/\\u200b/gm, '');\n            return html;\n        } else {\n            $textElem.html(val);\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 获取 JSON\n    getJSON: function getJSON() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        return getChildrenJSON($textElem);\n    },\n\n    // 获取 设置 text\n    text: function text(val) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        var text = void 0;\n        if (val == null) {\n            text = $textElem.text();\n            // 未选中任何内容的时候点击“加粗”或者“斜体”等按钮，就得需要一个空的占位符 &#8203 ，这里替换掉\n            text = text.replace(/\\u200b/gm, '');\n            return text;\n        } else {\n            $textElem.text('<p>' + val + '</p>');\n\n            // 初始化选取，将光标定位到内容尾部\n            editor.initSelection();\n        }\n    },\n\n    // 追加内容\n    append: function append(html) {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        $textElem.append($(html));\n\n        // 初始化选取，将光标定位到内容尾部\n        editor.initSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // 实时保存选取\n        this._saveRangeRealTime();\n\n        // 按回车建时的特殊处理\n        this._enterKeyHandle();\n\n        // 清空时保留 <p><br></p>\n        this._clearHandle();\n\n        // 粘贴事件（粘贴文字，粘贴图片）\n        this._pasteHandle();\n\n        // tab 特殊处理\n        this._tabHandle();\n\n        // img 点击\n        this._imgHandle();\n\n        // 拖拽事件\n        this._dragHandle();\n    },\n\n    // 实时保存选取\n    _saveRangeRealTime: function _saveRangeRealTime() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 保存当前的选区\n        function saveRange(e) {\n            // 随时保存选区\n            editor.selection.saveRange();\n            // 更新按钮 ative 状态\n            editor.menus.changeActive();\n        }\n        // 按键后保存\n        $textElem.on('keyup', saveRange);\n        $textElem.on('mousedown', function (e) {\n            // mousedown 状态下，鼠标滑动到编辑区域外面，也需要保存选区\n            $textElem.on('mouseleave', saveRange);\n        });\n        $textElem.on('mouseup', function (e) {\n            saveRange();\n            // 在编辑器区域之内完成点击，取消鼠标滑动到编辑区外面的事件\n            $textElem.off('mouseleave', saveRange);\n        });\n    },\n\n    // 按回车键时的特殊处理\n    _enterKeyHandle: function _enterKeyHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        function insertEmptyP($selectionElem) {\n            var $p = $('<p><br></p>');\n            $p.insertBefore($selectionElem);\n            editor.selection.createRangeByElem($p, true);\n            editor.selection.restoreSelection();\n            $selectionElem.remove();\n        }\n\n        // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n        function pHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            var $parentElem = $selectionElem.parent();\n\n            if ($parentElem.html() === '<code><br></code>') {\n                // 回车之前光标所在一个 <p><code>.....</code></p> ，忽然回车生成一个空的 <p><code><br></code></p>\n                // 而且继续回车跳不出去，因此只能特殊处理\n                insertEmptyP($selectionElem);\n                return;\n            }\n\n            if (!$parentElem.equal($textElem)) {\n                // 不是顶级标签\n                return;\n            }\n\n            var nodeName = $selectionElem.getNodeName();\n            if (nodeName === 'P') {\n                // 当前的标签是 P ，不用做处理\n                return;\n            }\n\n            if ($selectionElem.text()) {\n                // 有内容，不做处理\n                return;\n            }\n\n            // 插入 <p> ，并将选取定位到 <p>，删除当前标签\n            insertEmptyP($selectionElem);\n        }\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                return;\n            }\n            // 将回车之后生成的非 <p> 的顶级标签，改为 <p>\n            pHandle(e);\n        });\n\n        // <pre><code></code></pre> 回车时 特殊处理\n        function codeHandle(e) {\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName !== 'CODE' || parentNodeName !== 'PRE') {\n                // 不符合要求 忽略\n                return;\n            }\n\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n\n            // 处理：光标定位到代码末尾，联系点击两次回车，即跳出代码块\n            if (editor._willBreakCode === true) {\n                // 此时可以跳出代码块\n                // 插入 <p> ，并将选取定位到 <p>\n                var $p = $('<p><br></p>');\n                $p.insertAfter($parentElem);\n                editor.selection.createRangeByElem($p, true);\n                editor.selection.restoreSelection();\n\n                // 修改状态\n                editor._willBreakCode = false;\n\n                e.preventDefault();\n                return;\n            }\n\n            var _startOffset = editor.selection.getRange().startOffset;\n\n            // 处理：回车时，不能插入 <br> 而是插入 \\n ，因为是在 pre 标签里面\n            editor.cmd.do('insertHTML', '\\n');\n            editor.selection.saveRange();\n            if (editor.selection.getRange().startOffset === _startOffset) {\n                // 没起作用，再来一遍\n                editor.cmd.do('insertHTML', '\\n');\n            }\n\n            var codeLength = $selectionElem.html().length;\n            if (editor.selection.getRange().startOffset + 1 === codeLength) {\n                // 说明光标在代码最后的位置，执行了回车操作\n                // 记录下来，以便下次回车时候跳出 code\n                editor._willBreakCode = true;\n            }\n\n            // 阻止默认行为\n            e.preventDefault();\n        }\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 13) {\n                // 不是回车键\n                // 取消即将跳转代码块的记录\n                editor._willBreakCode = false;\n                return;\n            }\n            // <pre><code></code></pre> 回车时 特殊处理\n            codeHandle(e);\n        });\n    },\n\n    // 清空时保留 <p><br></p>\n    _clearHandle: function _clearHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var txtHtml = $textElem.html().toLowerCase().trim();\n            if (txtHtml === '<p><br></p>') {\n                // 最后剩下一个空行，就不再删除了\n                e.preventDefault();\n                return;\n            }\n        });\n\n        $textElem.on('keyup', function (e) {\n            if (e.keyCode !== 8) {\n                return;\n            }\n            var $p = void 0;\n            var txtHtml = $textElem.html().toLowerCase().trim();\n\n            // firefox 时用 txtHtml === '<br>' 判断，其他用 !txtHtml 判断\n            if (!txtHtml || txtHtml === '<br>') {\n                // 内容空了\n                $p = $('<p><br/></p>');\n                $textElem.html(''); // 一定要先清空，否则在 firefox 下有问题\n                $textElem.append($p);\n                editor.selection.createRangeByElem($p, false, true);\n                editor.selection.restoreSelection();\n            }\n        });\n    },\n\n    // 粘贴事件（粘贴文字 粘贴图片）\n    _pasteHandle: function _pasteHandle() {\n        var editor = this.editor;\n        var config = editor.config;\n        var pasteFilterStyle = config.pasteFilterStyle;\n        var pasteTextHandle = config.pasteTextHandle;\n        var ignoreImg = config.pasteIgnoreImg;\n        var $textElem = editor.$textElem;\n\n        // 粘贴图片、文本的事件，每次只能执行一个\n        // 判断该次粘贴事件是否可以执行\n        var pasteTime = 0;\n        function canDo() {\n            var now = Date.now();\n            var flag = false;\n            if (now - pasteTime >= 100) {\n                // 间隔大于 100 ms ，可以执行\n                flag = true;\n            }\n            pasteTime = now;\n            return flag;\n        }\n        function resetTime() {\n            pasteTime = 0;\n        }\n\n        // 粘贴文字\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                // 阻止默认行为，使用 execCommand 的粘贴命令\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的文字\n            var pasteHtml = getPasteHtml(e, pasteFilterStyle, ignoreImg);\n            var pasteText = getPasteText(e);\n            pasteText = pasteText.replace(/\\n/gm, '<br>');\n\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中只能粘贴纯文本\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n                return;\n            }\n\n            // 先放开注释，有问题再追查 ————\n            // // 表格中忽略，可能会出现异常问题\n            // if (nodeName === 'TD' || nodeName === 'TH') {\n            //     return\n            // }\n\n            if (!pasteHtml) {\n                // 没有内容，可继续执行下面的图片粘贴\n                resetTime();\n                return;\n            }\n            try {\n                // firefox 中，获取的 pasteHtml 可能是没有 <ul> 包裹的 <li>\n                // 因此执行 insertHTML 会报错\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteHtml = '' + (pasteTextHandle(pasteHtml) || '');\n                }\n                editor.cmd.do('insertHTML', pasteHtml);\n            } catch (ex) {\n                // 此时使用 pasteText 来兼容一下\n                if (pasteTextHandle && isFunction(pasteTextHandle)) {\n                    // 用户自定义过滤处理粘贴内容\n                    pasteText = '' + (pasteTextHandle(pasteText) || '');\n                }\n                editor.cmd.do('insertHTML', '<p>' + pasteText + '</p>');\n            }\n        });\n\n        // 粘贴图片\n        $textElem.on('paste', function (e) {\n            if (UA.isIE()) {\n                return;\n            } else {\n                e.preventDefault();\n            }\n\n            // 粘贴图片和文本，只能同时使用一个\n            if (!canDo()) {\n                return;\n            }\n\n            // 获取粘贴的图片\n            var pasteFiles = getPasteImgs(e);\n            if (!pasteFiles || !pasteFiles.length) {\n                return;\n            }\n\n            // 获取当前的元素\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var nodeName = $selectionElem.getNodeName();\n\n            // code 中粘贴忽略\n            if (nodeName === 'CODE' || nodeName === 'PRE') {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(pasteFiles);\n        });\n    },\n\n    // tab 特殊处理\n    _tabHandle: function _tabHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        $textElem.on('keydown', function (e) {\n            if (e.keyCode !== 9) {\n                return;\n            }\n            if (!editor.cmd.queryCommandSupported('insertHTML')) {\n                // 必须原生支持 insertHTML 命令\n                return;\n            }\n            var $selectionElem = editor.selection.getSelectionContainerElem();\n            if (!$selectionElem) {\n                return;\n            }\n            var $parentElem = $selectionElem.parent();\n            var selectionNodeName = $selectionElem.getNodeName();\n            var parentNodeName = $parentElem.getNodeName();\n\n            if (selectionNodeName === 'CODE' && parentNodeName === 'PRE') {\n                // <pre><code> 里面\n                editor.cmd.do('insertHTML', '    ');\n            } else {\n                // 普通文字\n                editor.cmd.do('insertHTML', '&nbsp;&nbsp;&nbsp;&nbsp;');\n            }\n\n            e.preventDefault();\n        });\n    },\n\n    // img 点击\n    _imgHandle: function _imgHandle() {\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n\n        // 为图片增加 selected 样式\n        $textElem.on('click', 'img', function (e) {\n            var img = this;\n            var $img = $(img);\n\n            if ($img.attr('data-w-e') === '1') {\n                // 是表情图片，忽略\n                return;\n            }\n\n            // 记录当前点击过的图片\n            editor._selectedImg = $img;\n\n            // 修改选区并 restore ，防止用户此时点击退格键，会删除其他内容\n            editor.selection.createRangeByElem($img);\n            editor.selection.restoreSelection();\n        });\n\n        // 去掉图片的 selected 样式\n        $textElem.on('click  keyup', function (e) {\n            if (e.target.matches('img')) {\n                // 点击的是图片，忽略\n                return;\n            }\n            // 删除记录\n            editor._selectedImg = null;\n        });\n    },\n\n    // 拖拽事件\n    _dragHandle: function _dragHandle() {\n        var editor = this.editor;\n\n        // 禁用 document 拖拽事件\n        var $document = $(document);\n        $document.on('dragleave drop dragenter dragover', function (e) {\n            e.preventDefault();\n        });\n\n        // 添加编辑区域拖拽事件\n        var $textElem = editor.$textElem;\n        $textElem.on('drop', function (e) {\n            e.preventDefault();\n            var files = e.dataTransfer && e.dataTransfer.files;\n            if (!files || !files.length) {\n                return;\n            }\n\n            // 上传图片\n            var uploadImg = editor.uploadImg;\n            uploadImg.uploadImg(files);\n        });\n    }\n};\n\n/*\n    命令，封装 document.execCommand\n*/\n\n// 构造函数\nfunction Command(editor) {\n    this.editor = editor;\n}\n\n// 修改原型\nCommand.prototype = {\n    constructor: Command,\n\n    // 执行命令\n    do: function _do(name, value) {\n        var editor = this.editor;\n\n        // 使用 styleWithCSS\n        if (!editor._useStyleWithCSS) {\n            document.execCommand('styleWithCSS', null, true);\n            editor._useStyleWithCSS = true;\n        }\n\n        // 如果无选区，忽略\n        if (!editor.selection.getRange()) {\n            return;\n        }\n\n        // 恢复选取\n        editor.selection.restoreSelection();\n\n        // 执行\n        var _name = '_' + name;\n        if (this[_name]) {\n            // 有自定义事件\n            this[_name](value);\n        } else {\n            // 默认 command\n            this._execCommand(name, value);\n        }\n\n        // 修改菜单状态\n        editor.menus.changeActive();\n\n        // 最后，恢复选取保证光标在原来的位置闪烁\n        editor.selection.saveRange();\n        editor.selection.restoreSelection();\n\n        // 触发 onchange\n        editor.change && editor.change();\n    },\n\n    // 自定义 insertHTML 事件\n    _insertHTML: function _insertHTML(html) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (this.queryCommandSupported('insertHTML')) {\n            // W3C\n            this._execCommand('insertHTML', html);\n        } else if (range.insertNode) {\n            // IE\n            range.deleteContents();\n            range.insertNode($(html)[0]);\n        } else if (range.pasteHTML) {\n            // IE <= 10\n            range.pasteHTML(html);\n        }\n    },\n\n    // 插入 elem\n    _insertElem: function _insertElem($elem) {\n        var editor = this.editor;\n        var range = editor.selection.getRange();\n\n        if (range.insertNode) {\n            range.deleteContents();\n            range.insertNode($elem[0]);\n        }\n    },\n\n    // 封装 execCommand\n    _execCommand: function _execCommand(name, value) {\n        document.execCommand(name, false, value);\n    },\n\n    // 封装 document.queryCommandValue\n    queryCommandValue: function queryCommandValue(name) {\n        return document.queryCommandValue(name);\n    },\n\n    // 封装 document.queryCommandState\n    queryCommandState: function queryCommandState(name) {\n        return document.queryCommandState(name);\n    },\n\n    // 封装 document.queryCommandSupported\n    queryCommandSupported: function queryCommandSupported(name) {\n        return document.queryCommandSupported(name);\n    }\n};\n\n/*\n    selection range API\n*/\n\n// 构造函数\nfunction API(editor) {\n    this.editor = editor;\n    this._currentRange = null;\n}\n\n// 修改原型\nAPI.prototype = {\n    constructor: API,\n\n    // 获取 range 对象\n    getRange: function getRange() {\n        return this._currentRange;\n    },\n\n    // 保存选区\n    saveRange: function saveRange(_range) {\n        if (_range) {\n            // 保存已有选区\n            this._currentRange = _range;\n            return;\n        }\n\n        // 获取当前的选区\n        var selection = window.getSelection();\n        if (selection.rangeCount === 0) {\n            return;\n        }\n        var range = selection.getRangeAt(0);\n\n        // 判断选区内容是否在编辑内容之内\n        var $containerElem = this.getSelectionContainerElem(range);\n        if (!$containerElem) {\n            return;\n        }\n\n        // 判断选区内容是否在不可编辑区域之内\n        if ($containerElem.attr('contenteditable') === 'false' || $containerElem.parentUntil('[contenteditable=false]')) {\n            return;\n        }\n\n        var editor = this.editor;\n        var $textElem = editor.$textElem;\n        if ($textElem.isContain($containerElem)) {\n            // 是编辑内容之内的\n            this._currentRange = range;\n        }\n    },\n\n    // 折叠选区\n    collapseRange: function collapseRange(toStart) {\n        if (toStart == null) {\n            // 默认为 false\n            toStart = false;\n        }\n        var range = this._currentRange;\n        if (range) {\n            range.collapse(toStart);\n        }\n    },\n\n    // 选中区域的文字\n    getSelectionText: function getSelectionText() {\n        var range = this._currentRange;\n        if (range) {\n            return this._currentRange.toString();\n        } else {\n            return '';\n        }\n    },\n\n    // 选区的 $Elem\n    getSelectionContainerElem: function getSelectionContainerElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.commonAncestorContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionStartElem: function getSelectionStartElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.startContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n    getSelectionEndElem: function getSelectionEndElem(range) {\n        range = range || this._currentRange;\n        var elem = void 0;\n        if (range) {\n            elem = range.endContainer;\n            return $(elem.nodeType === 1 ? elem : elem.parentNode);\n        }\n    },\n\n    // 选区是否为空\n    isSelectionEmpty: function isSelectionEmpty() {\n        var range = this._currentRange;\n        if (range && range.startContainer) {\n            if (range.startContainer === range.endContainer) {\n                if (range.startOffset === range.endOffset) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    },\n\n    // 恢复选区\n    restoreSelection: function restoreSelection() {\n        var selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(this._currentRange);\n    },\n\n    // 创建一个空白（即 &#8203 字符）选区\n    createEmptyRange: function createEmptyRange() {\n        var editor = this.editor;\n        var range = this.getRange();\n        var $elem = void 0;\n\n        if (!range) {\n            // 当前无 range\n            return;\n        }\n        if (!this.isSelectionEmpty()) {\n            // 当前选区必须没有内容才可以\n            return;\n        }\n\n        try {\n            // 目前只支持 webkit 内核\n            if (UA.isWebkit()) {\n                // 插入 &#8203\n                editor.cmd.do('insertHTML', '&#8203;');\n                // 修改 offset 位置\n                range.setEnd(range.endContainer, range.endOffset + 1);\n                // 存储\n                this.saveRange(range);\n            } else {\n                $elem = $('<strong>&#8203;</strong>');\n                editor.cmd.do('insertElem', $elem);\n                this.createRangeByElem($elem, true);\n            }\n        } catch (ex) {\n            // 部分情况下会报错，兼容一下\n        }\n    },\n\n    // 根据 $Elem 设置选区\n    createRangeByElem: function createRangeByElem($elem, toStart, isContent) {\n        // $elem - 经过封装的 elem\n        // toStart - true 开始位置，false 结束位置\n        // isContent - 是否选中Elem的内容\n        if (!$elem.length) {\n            return;\n        }\n\n        var elem = $elem[0];\n        var range = document.createRange();\n\n        if (isContent) {\n            range.selectNodeContents(elem);\n        } else {\n            range.selectNode(elem);\n        }\n\n        if (typeof toStart === 'boolean') {\n            range.collapse(toStart);\n        }\n\n        // 存储 range\n        this.saveRange(range);\n    }\n};\n\n/*\n    上传进度条\n*/\n\nfunction Progress(editor) {\n    this.editor = editor;\n    this._time = 0;\n    this._isShow = false;\n    this._isRender = false;\n    this._timeoutId = 0;\n    this.$textContainer = editor.$textContainerElem;\n    this.$bar = $('<div class=\"w-e-progress\"></div>');\n}\n\nProgress.prototype = {\n    constructor: Progress,\n\n    show: function show(progress) {\n        var _this = this;\n\n        // 状态处理\n        if (this._isShow) {\n            return;\n        }\n        this._isShow = true;\n\n        // 渲染\n        var $bar = this.$bar;\n        if (!this._isRender) {\n            var $textContainer = this.$textContainer;\n            $textContainer.append($bar);\n        } else {\n            this._isRender = true;\n        }\n\n        // 改变进度（节流，100ms 渲染一次）\n        if (Date.now() - this._time > 100) {\n            if (progress <= 1) {\n                $bar.css('width', progress * 100 + '%');\n                this._time = Date.now();\n            }\n        }\n\n        // 隐藏\n        var timeoutId = this._timeoutId;\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        timeoutId = setTimeout(function () {\n            _this._hide();\n        }, 500);\n    },\n\n    _hide: function _hide() {\n        var $bar = this.$bar;\n        $bar.remove();\n\n        // 修改状态\n        this._time = 0;\n        this._isShow = false;\n        this._isRender = false;\n    }\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n/*\n    上传图片\n*/\n\n// 构造函数\nfunction UploadImg(editor) {\n    this.editor = editor;\n}\n\n// 原型\nUploadImg.prototype = {\n    constructor: UploadImg,\n\n    // 根据 debug 弹出不同的信息\n    _alert: function _alert(alertInfo, debugInfo) {\n        var editor = this.editor;\n        var debug = editor.config.debug;\n        var customAlert = editor.config.customAlert;\n\n        if (debug) {\n            throw new Error('wangEditor: ' + (debugInfo || alertInfo));\n        } else {\n            if (customAlert && typeof customAlert === 'function') {\n                customAlert(alertInfo);\n            } else {\n                alert(alertInfo);\n            }\n        }\n    },\n\n    // 根据链接插入图片\n    insertLinkImg: function insertLinkImg(link) {\n        var _this2 = this;\n\n        if (!link) {\n            return;\n        }\n        var editor = this.editor;\n        var config = editor.config;\n\n        // 校验格式\n        var linkImgCheck = config.linkImgCheck;\n        var checkResult = void 0;\n        if (linkImgCheck && typeof linkImgCheck === 'function') {\n            checkResult = linkImgCheck(link);\n            if (typeof checkResult === 'string') {\n                // 校验失败，提示信息\n                alert(checkResult);\n                return;\n            }\n        }\n\n        editor.cmd.do('insertHTML', '<img src=\"' + link + '\" style=\"max-width:100%;\"/>');\n\n        // 验证图片 url 是否有效，无效的话给出提示\n        var img = document.createElement('img');\n        img.onload = function () {\n            var callback = config.linkImgCallback;\n            if (callback && typeof callback === 'function') {\n                callback(link);\n            }\n\n            img = null;\n        };\n        img.onerror = function () {\n            img = null;\n            // 无法成功下载图片\n            _this2._alert('插入图片错误', 'wangEditor: \\u63D2\\u5165\\u56FE\\u7247\\u51FA\\u9519\\uFF0C\\u56FE\\u7247\\u94FE\\u63A5\\u662F \"' + link + '\"\\uFF0C\\u4E0B\\u8F7D\\u8BE5\\u94FE\\u63A5\\u5931\\u8D25');\n            return;\n        };\n        img.onabort = function () {\n            img = null;\n        };\n        img.src = link;\n    },\n\n    // 上传图片\n    uploadImg: function uploadImg(files) {\n        var _this3 = this;\n\n        if (!files || !files.length) {\n            return;\n        }\n\n        // ------------------------------ 获取配置信息 ------------------------------\n        var editor = this.editor;\n        var config = editor.config;\n        var uploadImgServer = config.uploadImgServer;\n        var uploadImgShowBase64 = config.uploadImgShowBase64;\n\n        var maxSize = config.uploadImgMaxSize;\n        var maxSizeM = maxSize / 1024 / 1024;\n        var maxLength = config.uploadImgMaxLength || 10000;\n        var uploadFileName = config.uploadFileName || '';\n        var uploadImgParams = config.uploadImgParams || {};\n        var uploadImgParamsWithUrl = config.uploadImgParamsWithUrl;\n        var uploadImgHeaders = config.uploadImgHeaders || {};\n        var hooks = config.uploadImgHooks || {};\n        var timeout = config.uploadImgTimeout || 3000;\n        var withCredentials = config.withCredentials;\n        if (withCredentials == null) {\n            withCredentials = false;\n        }\n        var customUploadImg = config.customUploadImg;\n\n        if (!customUploadImg) {\n            // 没有 customUploadImg 的情况下，需要如下两个配置才能继续进行图片上传\n            if (!uploadImgServer && !uploadImgShowBase64) {\n                return;\n            }\n        }\n\n        // ------------------------------ 验证文件信息 ------------------------------\n        var resultFiles = [];\n        var errInfo = [];\n        arrForEach(files, function (file) {\n            var name = file.name;\n            var size = file.size;\n\n            // chrome 低版本 name === undefined\n            if (!name || !size) {\n                return;\n            }\n\n            if (/\\.(jpg|jpeg|png|bmp|gif|webp)$/i.test(name) === false) {\n                // 后缀名不合法，不是图片\n                errInfo.push('\\u3010' + name + '\\u3011\\u4E0D\\u662F\\u56FE\\u7247');\n                return;\n            }\n            if (maxSize < size) {\n                // 上传图片过大\n                errInfo.push('\\u3010' + name + '\\u3011\\u5927\\u4E8E ' + maxSizeM + 'M');\n                return;\n            }\n\n            // 验证通过的加入结果列表\n            resultFiles.push(file);\n        });\n        // 抛出验证信息\n        if (errInfo.length) {\n            this._alert('图片验证未通过: \\n' + errInfo.join('\\n'));\n            return;\n        }\n        if (resultFiles.length > maxLength) {\n            this._alert('一次最多上传' + maxLength + '张图片');\n            return;\n        }\n\n        // ------------------------------ 自定义上传 ------------------------------\n        if (customUploadImg && typeof customUploadImg === 'function') {\n            customUploadImg(resultFiles, this.insertLinkImg.bind(this));\n\n            // 阻止以下代码执行\n            return;\n        }\n\n        // 添加图片数据\n        var formdata = new FormData();\n        arrForEach(resultFiles, function (file) {\n            var name = uploadFileName || file.name;\n            formdata.append(name, file);\n        });\n\n        // ------------------------------ 上传图片 ------------------------------\n        if (uploadImgServer && typeof uploadImgServer === 'string') {\n            // 添加参数\n            var uploadImgServerArr = uploadImgServer.split('#');\n            uploadImgServer = uploadImgServerArr[0];\n            var uploadImgServerHash = uploadImgServerArr[1] || '';\n            objForEach(uploadImgParams, function (key, val) {\n                // 因使用者反应，自定义参数不能默认 encode ，由 v3.1.1 版本开始注释掉\n                // val = encodeURIComponent(val)\n\n                // 第一，将参数拼接到 url 中\n                if (uploadImgParamsWithUrl) {\n                    if (uploadImgServer.indexOf('?') > 0) {\n                        uploadImgServer += '&';\n                    } else {\n                        uploadImgServer += '?';\n                    }\n                    uploadImgServer = uploadImgServer + key + '=' + val;\n                }\n\n                // 第二，将参数添加到 formdata 中\n                formdata.append(key, val);\n            });\n            if (uploadImgServerHash) {\n                uploadImgServer += '#' + uploadImgServerHash;\n            }\n\n            // 定义 xhr\n            var xhr = new XMLHttpRequest();\n            xhr.open('POST', uploadImgServer);\n\n            // 设置超时\n            xhr.timeout = timeout;\n            xhr.ontimeout = function () {\n                // hook - timeout\n                if (hooks.timeout && typeof hooks.timeout === 'function') {\n                    hooks.timeout(xhr, editor);\n                }\n\n                _this3._alert('上传图片超时');\n            };\n\n            // 监控 progress\n            if (xhr.upload) {\n                xhr.upload.onprogress = function (e) {\n                    var percent = void 0;\n                    // 进度条\n                    var progressBar = new Progress(editor);\n                    if (e.lengthComputable) {\n                        percent = e.loaded / e.total;\n                        progressBar.show(percent);\n                    }\n                };\n            }\n\n            // 返回数据\n            xhr.onreadystatechange = function () {\n                var result = void 0;\n                if (xhr.readyState === 4) {\n                    if (xhr.status < 200 || xhr.status >= 300) {\n                        // hook - error\n                        if (hooks.error && typeof hooks.error === 'function') {\n                            hooks.error(xhr, editor);\n                        }\n\n                        // xhr 返回状态错误\n                        _this3._alert('上传图片发生错误', '\\u4E0A\\u4F20\\u56FE\\u7247\\u53D1\\u751F\\u9519\\u8BEF\\uFF0C\\u670D\\u52A1\\u5668\\u8FD4\\u56DE\\u72B6\\u6001\\u662F ' + xhr.status);\n                        return;\n                    }\n\n                    result = xhr.responseText;\n                    if ((typeof result === 'undefined' ? 'undefined' : _typeof(result)) !== 'object') {\n                        try {\n                            result = JSON.parse(result);\n                        } catch (ex) {\n                            // hook - fail\n                            if (hooks.fail && typeof hooks.fail === 'function') {\n                                hooks.fail(xhr, editor, result);\n                            }\n\n                            _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果是: ' + result);\n                            return;\n                        }\n                    }\n                    if (!hooks.customInsert && result.errno != '0') {\n                        // hook - fail\n                        if (hooks.fail && typeof hooks.fail === 'function') {\n                            hooks.fail(xhr, editor, result);\n                        }\n\n                        // 数据错误\n                        _this3._alert('上传图片失败', '上传图片返回结果错误，返回结果 errno=' + result.errno);\n                    } else {\n                        if (hooks.customInsert && typeof hooks.customInsert === 'function') {\n                            // 使用者自定义插入方法\n                            hooks.customInsert(_this3.insertLinkImg.bind(_this3), result, editor);\n                        } else {\n                            // 将图片插入编辑器\n                            var data = result.data || [];\n                            data.forEach(function (link) {\n                                _this3.insertLinkImg(link);\n                            });\n                        }\n\n                        // hook - success\n                        if (hooks.success && typeof hooks.success === 'function') {\n                            hooks.success(xhr, editor, result);\n                        }\n                    }\n                }\n            };\n\n            // hook - before\n            if (hooks.before && typeof hooks.before === 'function') {\n                var beforeResult = hooks.before(xhr, editor, resultFiles);\n                if (beforeResult && (typeof beforeResult === 'undefined' ? 'undefined' : _typeof(beforeResult)) === 'object') {\n                    if (beforeResult.prevent) {\n                        // 如果返回的结果是 {prevent: true, msg: 'xxxx'} 则表示用户放弃上传\n                        this._alert(beforeResult.msg);\n                        return;\n                    }\n                }\n            }\n\n            // 自定义 headers\n            objForEach(uploadImgHeaders, function (key, val) {\n                xhr.setRequestHeader(key, val);\n            });\n\n            // 跨域传 cookie\n            xhr.withCredentials = withCredentials;\n\n            // 发送请求\n            xhr.send(formdata);\n\n            // 注意，要 return 。不去操作接下来的 base64 显示方式\n            return;\n        }\n\n        // ------------------------------ 显示 base64 格式 ------------------------------\n        if (uploadImgShowBase64) {\n            arrForEach(files, function (file) {\n                var _this = _this3;\n                var reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function () {\n                    _this.insertLinkImg(this.result);\n                };\n            });\n        }\n    }\n};\n\n/*\n    编辑器构造函数\n*/\n\n// id，累加\nvar editorId = 1;\n\n// 构造函数\nfunction Editor(toolbarSelector, textSelector) {\n    if (toolbarSelector == null) {\n        // 没有传入任何参数，报错\n        throw new Error('错误：初始化编辑器时候未传入任何参数，请查阅文档');\n    }\n    // id，用以区分单个页面不同的编辑器对象\n    this.id = 'wangEditor-' + editorId++;\n\n    this.toolbarSelector = toolbarSelector;\n    this.textSelector = textSelector;\n\n    // 自定义配置\n    this.customConfig = {};\n}\n\n// 修改原型\nEditor.prototype = {\n    constructor: Editor,\n\n    // 初始化配置\n    _initConfig: function _initConfig() {\n        // _config 是默认配置，this.customConfig 是用户自定义配置，将它们 merge 之后再赋值\n        var target = {};\n        this.config = Object.assign(target, config, this.customConfig);\n\n        // 将语言配置，生成正则表达式\n        var langConfig = this.config.lang || {};\n        var langArgs = [];\n        objForEach(langConfig, function (key, val) {\n            // key 即需要生成正则表达式的规则，如“插入链接”\n            // val 即需要被替换成的语言，如“insert link”\n            langArgs.push({\n                reg: new RegExp(key, 'img'),\n                val: val\n\n            });\n        });\n        this.config.langArgs = langArgs;\n    },\n\n    // 初始化 DOM\n    _initDom: function _initDom() {\n        var _this = this;\n\n        var toolbarSelector = this.toolbarSelector;\n        var $toolbarSelector = $(toolbarSelector);\n        var textSelector = this.textSelector;\n\n        var config$$1 = this.config;\n        var zIndex = config$$1.zIndex;\n\n        // 定义变量\n        var $toolbarElem = void 0,\n            $textContainerElem = void 0,\n            $textElem = void 0,\n            $children = void 0;\n\n        if (textSelector == null) {\n            // 只传入一个参数，即是容器的选择器或元素，toolbar 和 text 的元素自行创建\n            $toolbarElem = $('<div></div>');\n            $textContainerElem = $('<div></div>');\n\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $toolbarSelector.children();\n\n            // 添加到 DOM 结构中\n            $toolbarSelector.append($toolbarElem).append($textContainerElem);\n\n            // 自行创建的，需要配置默认的样式\n            $toolbarElem.css('background-color', '#f1f1f1').css('border', '1px solid #ccc');\n            $textContainerElem.css('border', '1px solid #ccc').css('border-top', 'none').css('height', '300px');\n        } else {\n            // toolbar 和 text 的选择器都有值，记录属性\n            $toolbarElem = $toolbarSelector;\n            $textContainerElem = $(textSelector);\n            // 将编辑器区域原有的内容，暂存起来\n            $children = $textContainerElem.children();\n        }\n\n        // 编辑区域\n        $textElem = $('<div></div>');\n        $textElem.attr('contenteditable', 'true').css('width', '100%').css('height', '100%');\n\n        // 初始化编辑区域内容\n        if ($children && $children.length) {\n            $textElem.append($children);\n        } else {\n            $textElem.append($('<p><br></p>'));\n        }\n\n        // 编辑区域加入DOM\n        $textContainerElem.append($textElem);\n\n        // 设置通用的 class\n        $toolbarElem.addClass('w-e-toolbar');\n        $textContainerElem.addClass('w-e-text-container');\n        $textContainerElem.css('z-index', zIndex);\n        $textElem.addClass('w-e-text');\n\n        // 添加 ID\n        var toolbarElemId = getRandom('toolbar-elem');\n        $toolbarElem.attr('id', toolbarElemId);\n        var textElemId = getRandom('text-elem');\n        $textElem.attr('id', textElemId);\n\n        // 记录属性\n        this.$toolbarElem = $toolbarElem;\n        this.$textContainerElem = $textContainerElem;\n        this.$textElem = $textElem;\n        this.toolbarElemId = toolbarElemId;\n        this.textElemId = textElemId;\n\n        // 记录输入法的开始和结束\n        var compositionEnd = true;\n        $textContainerElem.on('compositionstart', function () {\n            // 输入法开始输入\n            compositionEnd = false;\n        });\n        $textContainerElem.on('compositionend', function () {\n            // 输入法结束输入\n            compositionEnd = true;\n        });\n\n        // 绑定 onchange\n        $textContainerElem.on('click keyup', function () {\n            // 输入法结束才出发 onchange\n            compositionEnd && _this.change && _this.change();\n        });\n        $toolbarElem.on('click', function () {\n            this.change && this.change();\n        });\n\n        //绑定 onfocus 与 onblur 事件\n        if (config$$1.onfocus || config$$1.onblur) {\n            // 当前编辑器是否是焦点状态\n            this.isFocus = false;\n\n            $(document).on('click', function (e) {\n                //判断当前点击元素是否在编辑器内\n                var isChild = $textElem.isContain($(e.target));\n\n                //判断当前点击元素是否为工具栏\n                var isToolbar = $toolbarElem.isContain($(e.target));\n                var isMenu = $toolbarElem[0] == e.target ? true : false;\n\n                if (!isChild) {\n                    //若为选择工具栏中的功能，则不视为成blur操作\n                    if (isToolbar && !isMenu) {\n                        return;\n                    }\n\n                    if (_this.isFocus) {\n                        _this.onblur && _this.onblur();\n                    }\n                    _this.isFocus = false;\n                } else {\n                    if (!_this.isFocus) {\n                        _this.onfocus && _this.onfocus();\n                    }\n                    _this.isFocus = true;\n                }\n            });\n        }\n    },\n\n    // 封装 command\n    _initCommand: function _initCommand() {\n        this.cmd = new Command(this);\n    },\n\n    // 封装 selection range API\n    _initSelectionAPI: function _initSelectionAPI() {\n        this.selection = new API(this);\n    },\n\n    // 添加图片上传\n    _initUploadImg: function _initUploadImg() {\n        this.uploadImg = new UploadImg(this);\n    },\n\n    // 初始化菜单\n    _initMenus: function _initMenus() {\n        this.menus = new Menus(this);\n        this.menus.init();\n    },\n\n    // 添加 text 区域\n    _initText: function _initText() {\n        this.txt = new Text(this);\n        this.txt.init();\n    },\n\n    // 初始化选区，将光标定位到内容尾部\n    initSelection: function initSelection(newLine) {\n        var $textElem = this.$textElem;\n        var $children = $textElem.children();\n        if (!$children.length) {\n            // 如果编辑器区域无内容，添加一个空行，重新设置选区\n            $textElem.append($('<p><br></p>'));\n            this.initSelection();\n            return;\n        }\n\n        var $last = $children.last();\n\n        if (newLine) {\n            // 新增一个空行\n            var html = $last.html().toLowerCase();\n            var nodeName = $last.getNodeName();\n            if (html !== '<br>' && html !== '<br\\/>' || nodeName !== 'P') {\n                // 最后一个元素不是 <p><br></p>，添加一个空行，重新设置选区\n                $textElem.append($('<p><br></p>'));\n                this.initSelection();\n                return;\n            }\n        }\n\n        this.selection.createRangeByElem($last, false, true);\n        this.selection.restoreSelection();\n    },\n\n    // 绑定事件\n    _bindEvent: function _bindEvent() {\n        // -------- 绑定 onchange 事件 --------\n        var onChangeTimeoutId = 0;\n        var beforeChangeHtml = this.txt.html();\n        var config$$1 = this.config;\n\n        // onchange 触发延迟时间\n        var onchangeTimeout = config$$1.onchangeTimeout;\n        onchangeTimeout = parseInt(onchangeTimeout, 10);\n        if (!onchangeTimeout || onchangeTimeout <= 0) {\n            onchangeTimeout = 200;\n        }\n\n        var onchange = config$$1.onchange;\n        if (onchange && typeof onchange === 'function') {\n            // 触发 change 的有三个场景：\n            // 1. $textContainerElem.on('click keyup')\n            // 2. $toolbarElem.on('click')\n            // 3. editor.cmd.do()\n            this.change = function () {\n                // 判断是否有变化\n                var currentHtml = this.txt.html();\n\n                if (currentHtml.length === beforeChangeHtml.length) {\n                    // 需要比较每一个字符\n                    if (currentHtml === beforeChangeHtml) {\n                        return;\n                    }\n                }\n\n                // 执行，使用节流\n                if (onChangeTimeoutId) {\n                    clearTimeout(onChangeTimeoutId);\n                }\n                onChangeTimeoutId = setTimeout(function () {\n                    // 触发配置的 onchange 函数\n                    onchange(currentHtml);\n                    beforeChangeHtml = currentHtml;\n                }, onchangeTimeout);\n            };\n        }\n\n        // -------- 绑定 onblur 事件 --------\n        var onblur = config$$1.onblur;\n        if (onblur && typeof onblur === 'function') {\n            this.onblur = function () {\n                var currentHtml = this.txt.html();\n                onblur(currentHtml);\n            };\n        }\n\n        // -------- 绑定 onfocus 事件 --------\n        var onfocus = config$$1.onfocus;\n        if (onfocus && typeof onfocus === 'function') {\n            this.onfocus = function () {\n                onfocus();\n            };\n        }\n    },\n\n    // 创建编辑器\n    create: function create() {\n        // 初始化配置信息\n        this._initConfig();\n\n        // 初始化 DOM\n        this._initDom();\n\n        // 封装 command API\n        this._initCommand();\n\n        // 封装 selection range API\n        this._initSelectionAPI();\n\n        // 添加 text\n        this._initText();\n\n        // 初始化菜单\n        this._initMenus();\n\n        // 添加 图片上传\n        this._initUploadImg();\n\n        // 初始化选区，将光标定位到内容尾部\n        this.initSelection(true);\n\n        // 绑定事件\n        this._bindEvent();\n    },\n\n    // 解绑所有事件（暂时不对外开放）\n    _offAllEvent: function _offAllEvent() {\n        $.offAll();\n    }\n};\n\n// 检验是否浏览器环境\ntry {\n    document;\n} catch (ex) {\n    throw new Error('请在浏览器环境下运行');\n}\n\n// polyfill\npolyfill();\n\n// 这里的 `inlinecss` 将被替换成 css 代码的内容，详情可去 ./gulpfile.js 中搜索 `inlinecss` 关键字\nvar inlinecss = '.w-e-toolbar,.w-e-text-container,.w-e-menu-panel {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-toolbar *,.w-e-text-container *,.w-e-menu-panel * {  padding: 0;  margin: 0;  box-sizing: border-box;}.w-e-clear-fix:after {  content: \"\";  display: table;  clear: both;}.w-e-toolbar .w-e-droplist {  position: absolute;  left: 0;  top: 0;  background-color: #fff;  border: 1px solid #f1f1f1;  border-right-color: #ccc;  border-bottom-color: #ccc;}.w-e-toolbar .w-e-droplist .w-e-dp-title {  text-align: center;  color: #999;  line-height: 2;  border-bottom: 1px solid #f1f1f1;  font-size: 13px;}.w-e-toolbar .w-e-droplist ul.w-e-list {  list-style: none;  line-height: 1;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item {  color: #333;  padding: 5px 0;}.w-e-toolbar .w-e-droplist ul.w-e-list li.w-e-item:hover {  background-color: #f1f1f1;}.w-e-toolbar .w-e-droplist ul.w-e-block {  list-style: none;  text-align: left;  padding: 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item {  display: inline-block;  *display: inline;  *zoom: 1;  padding: 3px 5px;}.w-e-toolbar .w-e-droplist ul.w-e-block li.w-e-item:hover {  background-color: #f1f1f1;}@font-face {  font-family: \\'w-e-icon\\';  src: url(data:application/x-font-woff;charset=utf-8;base64,) format(\\'truetype\\');  font-weight: normal;  font-style: normal;}[class^=\"w-e-icon-\"],[class*=\" w-e-icon-\"] {  /* use !important to prevent issues with browser extensions that change fonts */  font-family: \\'w-e-icon\\' !important;  speak: none;  font-style: normal;  font-weight: normal;  font-variant: normal;  text-transform: none;  line-height: 1;  /* Better Font Rendering =========== */  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;}.w-e-icon-close:before {  content: \"\\\\f00d\";}.w-e-icon-upload2:before {  content: \"\\\\e9c6\";}.w-e-icon-trash-o:before {  content: \"\\\\f014\";}.w-e-icon-header:before {  content: \"\\\\f1dc\";}.w-e-icon-pencil2:before {  content: \"\\\\e906\";}.w-e-icon-paint-brush:before {  content: \"\\\\f1fc\";}.w-e-icon-image:before {  content: \"\\\\e90d\";}.w-e-icon-play:before {  content: \"\\\\e912\";}.w-e-icon-location:before {  content: \"\\\\e947\";}.w-e-icon-undo:before {  content: \"\\\\e965\";}.w-e-icon-redo:before {  content: \"\\\\e966\";}.w-e-icon-quotes-left:before {  content: \"\\\\e977\";}.w-e-icon-list-numbered:before {  content: \"\\\\e9b9\";}.w-e-icon-list2:before {  content: \"\\\\e9bb\";}.w-e-icon-link:before {  content: \"\\\\e9cb\";}.w-e-icon-happy:before {  content: \"\\\\e9df\";}.w-e-icon-bold:before {  content: \"\\\\ea62\";}.w-e-icon-underline:before {  content: \"\\\\ea63\";}.w-e-icon-italic:before {  content: \"\\\\ea64\";}.w-e-icon-strikethrough:before {  content: \"\\\\ea65\";}.w-e-icon-table2:before {  content: \"\\\\ea71\";}.w-e-icon-paragraph-left:before {  content: \"\\\\ea77\";}.w-e-icon-paragraph-center:before {  content: \"\\\\ea78\";}.w-e-icon-paragraph-right:before {  content: \"\\\\ea79\";}.w-e-icon-terminal:before {  content: \"\\\\f120\";}.w-e-icon-page-break:before {  content: \"\\\\ea68\";}.w-e-icon-cancel-circle:before {  content: \"\\\\ea0d\";}.w-e-icon-font:before {  content: \"\\\\ea5c\";}.w-e-icon-text-heigh:before {  content: \"\\\\ea5f\";}.w-e-toolbar {  display: -webkit-box;  display: -ms-flexbox;  display: flex;  padding: 0 5px;  /* flex-wrap: wrap; */  /* 单个菜单 */}.w-e-toolbar .w-e-menu {  position: relative;  text-align: center;  padding: 5px 10px;  cursor: pointer;}.w-e-toolbar .w-e-menu i {  color: #999;}.w-e-toolbar .w-e-menu:hover i {  color: #333;}.w-e-toolbar .w-e-active i {  color: #1e88e5;}.w-e-toolbar .w-e-active:hover i {  color: #1e88e5;}.w-e-text-container .w-e-panel-container {  position: absolute;  top: 0;  left: 50%;  border: 1px solid #ccc;  border-top: 0;  box-shadow: 1px 1px 2px #ccc;  color: #333;  background-color: #fff;  /* 为 emotion panel 定制的样式 */  /* 上传图片的 panel 定制样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-close {  position: absolute;  right: 0;  top: 0;  padding: 5px;  margin: 2px 5px 0 0;  cursor: pointer;  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-close:hover {  color: #333;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title {  list-style: none;  display: -webkit-box;  display: -ms-flexbox;  display: flex;  font-size: 14px;  margin: 2px 10px 0 10px;  border-bottom: 1px solid #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-item {  padding: 3px 5px;  color: #999;  cursor: pointer;  margin: 0 3px;  position: relative;  top: 1px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-title .w-e-active {  color: #333;  border-bottom: 1px solid #333;  cursor: default;  font-weight: 700;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content {  padding: 10px 15px 10px 15px;  font-size: 16px;  /* 输入框的样式 */  /* 按钮的样式 */}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus,.w-e-text-container .w-e-panel-container .w-e-panel-tab-content button:focus {  outline: none;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea {  width: 100%;  border: 1px solid #ccc;  padding: 5px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content textarea:focus {  border-color: #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text] {  border: none;  border-bottom: 1px solid #ccc;  font-size: 14px;  height: 20px;  color: #333;  text-align: left;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].small {  width: 30px;  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text].block {  display: block;  width: 100%;  margin: 10px 0;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content input[type=text]:focus {  border-bottom: 2px solid #1e88e5;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button {  font-size: 14px;  color: #1e88e5;  border: none;  padding: 5px 10px;  background-color: #fff;  cursor: pointer;  border-radius: 3px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.left {  float: left;  margin-right: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.right {  float: right;  margin-left: 10px;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.gray {  color: #999;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button.red {  color: #c24f4a;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container button:hover {  background-color: #f1f1f1;}.w-e-text-container .w-e-panel-container .w-e-panel-tab-content .w-e-button-container:after {  content: \"\";  display: table;  clear: both;}.w-e-text-container .w-e-panel-container .w-e-emoticon-container .w-e-item {  cursor: pointer;  font-size: 18px;  padding: 0 3px;  display: inline-block;  *display: inline;  *zoom: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container {  text-align: center;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn {  display: inline-block;  *display: inline;  *zoom: 1;  color: #999;  cursor: pointer;  font-size: 60px;  line-height: 1;}.w-e-text-container .w-e-panel-container .w-e-up-img-container .w-e-up-btn:hover {  color: #333;}.w-e-text-container {  position: relative;}.w-e-text-container .w-e-progress {  position: absolute;  background-color: #1e88e5;  bottom: 0;  left: 0;  height: 1px;}.w-e-text {  padding: 0 10px;  overflow-y: scroll;}.w-e-text p,.w-e-text h1,.w-e-text h2,.w-e-text h3,.w-e-text h4,.w-e-text h5,.w-e-text table,.w-e-text pre {  margin: 10px 0;  line-height: 1.5;}.w-e-text ul,.w-e-text ol {  margin: 10px 0 10px 20px;}.w-e-text blockquote {  display: block;  border-left: 8px solid #d0e5f2;  padding: 5px 10px;  margin: 10px 0;  line-height: 1.4;  font-size: 100%;  background-color: #f1f1f1;}.w-e-text code {  display: inline-block;  *display: inline;  *zoom: 1;  background-color: #f1f1f1;  border-radius: 3px;  padding: 3px 5px;  margin: 0 3px;}.w-e-text pre code {  display: block;}.w-e-text table {  border-top: 1px solid #ccc;  border-left: 1px solid #ccc;}.w-e-text table td,.w-e-text table th {  border-bottom: 1px solid #ccc;  border-right: 1px solid #ccc;  padding: 3px 5px;}.w-e-text table th {  border-bottom: 2px solid #ccc;  text-align: center;}.w-e-text:focus {  outline: none;}.w-e-text img {  cursor: pointer;}.w-e-text img:hover {  box-shadow: 0 0 5px #333;}';\n\n// 将 css 代码添加到 <style> 中\nvar style = document.createElement('style');\nstyle.type = 'text/css';\nstyle.innerHTML = inlinecss;\ndocument.getElementsByTagName('HEAD').item(0).appendChild(style);\n\n// 返回\nvar index = window.wangEditor || Editor;\n\nreturn index;\n\n})));\n","'use strict';\n// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(6);\nvar KEY = 'findIndex';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./articles-management.vue?vue&type=style&index=0&id=347779d0&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./articles-management.vue?vue&type=style&index=0&id=347779d0&lang=stylus&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"article-management\"},[_c('admin-default',{attrs:{\"selectMenuIndex\":'2'}},[_c('div',{attrs:{\"slot\":\"main\"},slot:\"main\"},[_c('div',{staticClass:\"opera-wrap\"},[_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addArticleShow}},[_vm._v(\"添加文章\")]),_c('el-button',{attrs:{\"disabled\":!_vm.ids.length,\"type\":\"danger\"},on:{\"click\":function($event){return _vm.deleteChecked(_vm.ids)}}},[_vm._v(\"批量删除\")]),_c('el-input',{staticClass:\"input-with-select\",attrs:{\"placeholder\":\"请输入搜索关键词\"},model:{value:(_vm.searchInput),callback:function ($$v) {_vm.searchInput=$$v},expression:\"searchInput\"}},[_c('el-select',{staticClass:\"select\",attrs:{\"slot\":\"prepend\",\"placeholder\":\"请选择\"},slot:\"prepend\",model:{value:(_vm.select),callback:function ($$v) {_vm.select=$$v},expression:\"select\"}},[_c('el-option',{attrs:{\"label\":\"标题\",\"value\":\"1\"}}),_c('el-option',{attrs:{\"label\":\"类别\",\"value\":\"2\"}})],1),_c('el-button',{attrs:{\"slot\":\"append\",\"icon\":\"el-icon-search\"},on:{\"click\":function($event){return _vm.getArticleData({type:_vm.select,keyword:_vm.searchInput})}},slot:\"append\"})],1)],1),_c('div',{staticClass:\"tab-wrap\"},[_c('el-table',{staticStyle:{\"width\":\"100%\"},attrs:{\"border\":\"\",\"highlight-current-row\":\"\",\"data\":_vm.articleListData,\"max-height\":\"470\"},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"align\":\"center\",\"type\":\"selection\"}}),_c('el-table-column',{attrs:{\"align\":\"center\",\"label\":\"日期\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('p',[_vm._v(_vm._s(_vm.formatTime(new Date(scope.row.createtime))))])]}}])}),_c('el-table-column',{attrs:{\"align\":\"center\",\"prop\":\"title\",\"label\":\"标题\"}}),_c('el-table-column',{attrs:{\"show-overflow-tooltip\":\"\",\"align\":\"center\",\"prop\":\"desc\",\"label\":\"描述\"}}),_c('el-table-column',{attrs:{\"align\":\"center\",\"label\":\"焦点图\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('img',{attrs:{\"width\":\"100%\",\"src\":scope.row.bannerimg?scope.row.bannerimg:'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1558659946263&di=83a1047b593eb9dd0dc19f1666aae116&imgtype=0&src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201703%2F30%2F20170330225122_TLMun.jpeg',\"alt\":\"封面\"}}),_c('span',[_vm._v(\"[下载]\")])]}}])}),_c('el-table-column',{attrs:{\"align\":\"center\",\"prop\":\"top\",\"label\":\"是否置顶\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.top == 0? '否':'是'))])]}}])}),_c('el-table-column',{attrs:{\"align\":\"center\",\"prop\":\"articlestate\",\"label\":\"文章状态\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',[_vm._v(_vm._s(scope.row.articlestate == 0? '隐藏':'正常'))])]}}])}),_c('el-table-column',{attrs:{\"align\":\"center\",\"prop\":\"name\",\"label\":\"文章归类\"}}),_c('el-table-column',{attrs:{\"align\":\"center\",\"fixed\":\"right\",\"prop\":\"opera\",\"label\":\"操作\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.editRow(scope.$index, _vm.articleListData)}}},[_vm._v(\"编辑\")]),_c('el-button',{attrs:{\"type\":\"danger\",\"size\":\"mini\"},nativeOn:{\"click\":function($event){$event.preventDefault();return _vm.deleteRow(scope.$index, _vm.articleListData)}}},[_vm._v(\"移除\")])]}}])})],1)],1),_c('div',{staticClass:\"pagation-wrap\"},[_c('el-pagination',{attrs:{\"current-page\":_vm.pagationParams.currentPage,\"page-sizes\":[1, 10, 20, 50, 100, 200, 500],\"page-size\":_vm.pagationParams.limit,\"layout\":\"total, sizes, prev, pager, next, jumper\",\"total\":_vm.pagationParams.totalcount},on:{\"size-change\":_vm.handleSizeChange,\"current-change\":_vm.handleCurrentChange}})],1),_c('add-article',{ref:\"add-article\",attrs:{\"articleTypeData\":_vm.articleTypeData}}),_c('edit-article',{ref:\"edit-article\",attrs:{\"articleTypeData\":_vm.articleTypeData,\"editArticleData\":_vm.editArticleData}})],1)])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"edit-article-component\"},[_c('div',{staticClass:\"dialog-wrap\"},[_c('el-dialog',{attrs:{\"title\":\"编辑文章\",\"visible\":_vm.editDialogVisible,\"width\":\"80%\",\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.editDialogVisible=$event}}},[_c('div',{staticClass:\"top\"},[_c('el-input',{attrs:{\"placeholder\":\"文章标题\"},model:{value:(_vm.editArticleData.title),callback:function ($$v) {_vm.$set(_vm.editArticleData, \"title\", $$v)},expression:\"editArticleData.title\"}}),_c('el-date-picker',{attrs:{\"type\":\"datetime\",\"placeholder\":\"选择日期时间\",\"default-time\":\"12:00:00\"},on:{\"change\":_vm.editArticleCreateTimeChange},model:{value:(_vm.editArticleData.createtime),callback:function ($$v) {_vm.$set(_vm.editArticleData, \"createtime\", $$v)},expression:\"editArticleData.createtime\"}}),_c('el-select',{attrs:{\"placeholder\":\"文章标签\"},on:{\"change\":_vm.editArticleTypeChange},model:{value:(_vm.editArticleData.article_type_id),callback:function ($$v) {_vm.$set(_vm.editArticleData, \"article_type_id\", $$v)},expression:\"editArticleData.article_type_id\"}},_vm._l((_vm.articleTypeData),function(group,index){return _c('el-option-group',{key:index,attrs:{\"label\":group.label}},_vm._l((group.options),function(it,id){return _c('el-option',{key:id,attrs:{\"label\":it.label,\"value\":it.id}})}),1)}),1),_c('el-select',{attrs:{\"placeholder\":\"是否置顶\"},on:{\"change\":_vm.editArticleTopChange},model:{value:(_vm.editArticleData.top),callback:function ($$v) {_vm.$set(_vm.editArticleData, \"top\", $$v)},expression:\"editArticleData.top\"}},[_c('el-option',{attrs:{\"label\":\"不置顶\",\"value\":0}}),_c('el-option',{attrs:{\"label\":\"置顶\",\"value\":1}})],1),_c('el-select',{attrs:{\"placeholder\":\"文章状态选择\"},on:{\"change\":_vm.editArticleStateChange},model:{value:(_vm.editArticleData.articlestate),callback:function ($$v) {_vm.$set(_vm.editArticleData, \"articlestate\", $$v)},expression:\"editArticleData.articlestate\"}},[_c('el-option',{attrs:{\"label\":\"删除(隐藏)\",\"value\":0}}),_c('el-option',{attrs:{\"label\":\"正常(显示)\",\"value\":1}})],1)],1),_c('div',{staticClass:\"middle\"},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"文章描述\"},model:{value:(_vm.editArticleData.desc),callback:function ($$v) {_vm.$set(_vm.editArticleData, \"desc\", $$v)},expression:\"editArticleData.desc\"}}),_c('editor',{ref:\"editor2\",attrs:{\"initContent\":_vm.editArticleData.content},on:{\"getEditorContent\":_vm.editGetEditorContent}})],1),_c('div',{staticClass:\"footer\"},[_c('div',{staticClass:\"imgload-wrap\"},[_c('img-load',{attrs:{\"action\":\"http://localhost:9001/uploadArticleBannerImg\"},on:{\"uploadImageSuccess\":_vm.editArticleBannerImgChange}})],1)]),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.editDialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.commitEditArticle}},[_vm._v(\"修改\")])],1)])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"editor-component\"},[_c('div',{ref:\"editor\",staticStyle:{\"text-align\":\"left\"}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"editor-component\">\r\n    <div ref=\"editor\" style=\"text-align:left\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport E from \"wangeditor\";\r\n\r\nexport default {\r\n  name: \"editor\",\r\n  props: {\r\n    initContent: {\r\n      type: String,\r\n      default: \"\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      editorContent: this.initContent\r\n    };\r\n  },\r\n  methods: {\r\n    getContent: function() {\r\n      this.$emit(\"getEditorContent\", this.editorContent);\r\n    }\r\n  },\r\n  mounted() {\r\n    this.editor = new E(this.$refs.editor);\r\n    this.editor.customConfig.onchange = html => {\r\n      this.editorContent = html;\r\n    };\r\n    this.editor.create();\r\n    this.editor.txt.html(this.initContent);\r\n  },\r\n  watch: {\r\n    initContent(nVal) {\r\n      this.editor.txt.html(nVal);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Editor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Editor.vue?vue&type=template&id=46b2800c&scoped=true&\"\nimport script from \"./Editor.vue?vue&type=script&lang=js&\"\nexport * from \"./Editor.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"46b2800c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"image-load-component\"},[_c('el-upload',{staticClass:\"upload-demo\",attrs:{\"action\":_vm.action,\"on-preview\":_vm.handlePreview,\"on-remove\":_vm.handleRemove,\"on-success\":_vm.handleSuccess,\"file-list\":_vm.fileList,\"data\":{target:'article'},\"list-type\":\"picture\"}},[_vm._t(\"cont\",[_c('el-button',{staticClass:\"uploadbtn\",attrs:{\"size\":\"small\",\"type\":\"primary\"}},[_vm._v(\"上传图片(500KB内)\")])])],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"image-load-component\">\r\n    <el-upload\r\n      class=\"upload-demo\"\r\n      :action=\"action\"\r\n      :on-preview=\"handlePreview\"\r\n      :on-remove=\"handleRemove\"\r\n      :on-success=\"handleSuccess\"\r\n      :file-list=\"fileList\"\r\n      :data=\"{target:'article'}\"\r\n      list-type=\"picture\"\r\n    >\r\n      <slot name=\"cont\">\r\n        <el-button class=\"uploadbtn\" size=\"small\" type=\"primary\">上传图片(500KB内)</el-button>\r\n      </slot>\r\n    </el-upload>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"action\"], //https://jsonplaceholder.typicode.com/posts/\r\n  data() {\r\n    return {\r\n      fileList: []\r\n    };\r\n  },\r\n  methods: {\r\n    //  上传成功回调\r\n    handleSuccess(response, file, fileList) {\r\n      //   console.log(\"上传成功回调： \", file, fileList);\r\n      this.$emit(\"uploadImageSuccess\", response, file, fileList);\r\n    },\r\n    //   移除某项回调\r\n    handleRemove(file, fileList) {\r\n      console.log(\"移除某项图调用： \", file, fileList);\r\n      this.$emit(\"removeUploadImage\", file);\r\n    },\r\n    //  点击列表项触发回调\r\n    handlePreview(file) {\r\n      //   console.log(file);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang='stylus' scoped></style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./imgLoad.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./imgLoad.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./imgLoad.vue?vue&type=template&id=011a1662&scoped=true&\"\nimport script from \"./imgLoad.vue?vue&type=script&lang=js&\"\nexport * from \"./imgLoad.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"011a1662\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"edit-article-component\">\r\n    <!-- 修改文章 -->\r\n    <div class=\"dialog-wrap\">\r\n      <el-dialog\r\n        title=\"编辑文章\"\r\n        :visible.sync=\"editDialogVisible\"\r\n        width=\"80%\"\r\n        :before-close=\"handleClose\"\r\n      >\r\n        <div class=\"top\">\r\n          <el-input placeholder=\"文章标题\" v-model=\"editArticleData.title\"></el-input>\r\n          <el-date-picker\r\n            v-model=\"editArticleData.createtime\"\r\n            type=\"datetime\"\r\n            @change=\"editArticleCreateTimeChange\"\r\n            placeholder=\"选择日期时间\"\r\n            default-time=\"12:00:00\"\r\n          ></el-date-picker>\r\n          <!-- 类别选择 -->\r\n          <el-select\r\n            @change=\"editArticleTypeChange\"\r\n            v-model=\"editArticleData.article_type_id\"\r\n            placeholder=\"文章标签\"\r\n          >\r\n            <el-option-group\r\n              v-for=\"(group, index) in articleTypeData\"\r\n              :key=\"index\"\r\n              :label=\"group.label\"\r\n            >\r\n              <el-option\r\n                v-for=\"(it,id) in group.options\"\r\n                :key=\"id\"\r\n                :label=\"it.label\"\r\n                :value=\"it.id\"\r\n              ></el-option>\r\n            </el-option-group>\r\n          </el-select>\r\n          <!-- 置顶选择 -->\r\n          <el-select\r\n            @change=\"editArticleTopChange\"\r\n            v-model=\"editArticleData.top\"\r\n            placeholder=\"是否置顶\"\r\n          >\r\n            <el-option label=\"不置顶\" :value=\"0\"></el-option>\r\n            <el-option label=\"置顶\" :value=\"1\"></el-option>\r\n          </el-select>\r\n          <!-- 文章状态 -->\r\n          <el-select\r\n            @change=\"editArticleStateChange\"\r\n            v-model=\"editArticleData.articlestate\"\r\n            placeholder=\"文章状态选择\"\r\n          >\r\n            <el-option label=\"删除(隐藏)\" :value=\"0\"></el-option>\r\n            <el-option label=\"正常(显示)\" :value=\"1\"></el-option>\r\n          </el-select>\r\n        </div>\r\n\r\n        <div class=\"middle\">\r\n          <el-input type=\"textarea\" placeholder=\"文章描述\" v-model=\"editArticleData.desc\"></el-input>\r\n          <editor\r\n            ref=\"editor2\"\r\n            :initContent=\"editArticleData.content\"\r\n            @getEditorContent=\"editGetEditorContent\"\r\n          ></editor>\r\n        </div>\r\n\r\n        <div class=\"footer\">\r\n          <div class=\"imgload-wrap\">\r\n            <img-load\r\n              @uploadImageSuccess=\"editArticleBannerImgChange\"\r\n              action=\"http://localhost:9001/uploadArticleBannerImg\"\r\n            ></img-load>\r\n          </div>\r\n        </div>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"editDialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"commitEditArticle\">修改</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { MessageBox, Notification } from \"element-ui\";\r\nimport { postEditArticleData } from \"api/article.js\";\r\nimport Editor from \"components/admin/common/Editor.vue\";\r\nimport ImgLoad from \"components/admin/common/imgLoad.vue\";\r\nexport default {\r\n  props: [\"editArticleData\", \"articleTypeData\"],\r\n  data() {\r\n    return {\r\n      editDialogVisible: false\r\n    };\r\n  },\r\n  methods: {\r\n    //  提交修改文章\r\n    commitEditArticle() {\r\n      this.$refs.editor2.getContent();\r\n      // 请求修改数据\r\n      postEditArticleData(this.editArticleData)\r\n        .then(res => {\r\n          if (res.code == 0) {\r\n            Notification({\r\n              title: \"修改文章\",\r\n              message: res.msg,\r\n              type: \"success\"\r\n            });\r\n            setTimeout(() => {\r\n              this.editDialogVisible = false;\r\n            }, 1000);\r\n          } else {\r\n            Notification({\r\n              title: \"修改失败\",\r\n              message: res.msg,\r\n              type: \"error\"\r\n            });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          Notification({\r\n            title: \"请求失败\",\r\n            message: \"发生未知错误\" + err,\r\n            type: \"error\"\r\n          });\r\n        });\r\n    },\r\n    //  文章修改富文本内容赋值\r\n    editGetEditorContent(text) {\r\n      this.editArticleData.content = this.$xss(text);\r\n    },\r\n    //  文章修改类别被选中值发生变化\r\n    editArticleTypeChange(val) {\r\n      this.editArticleData.type = val;\r\n    },\r\n    editArticleCreateTimeChange(val) {\r\n      this.editArticleData.createtime = val;\r\n    },\r\n    editArticleTopChange(val) {\r\n      this.editArticleData.top = val;\r\n    },\r\n    //  文章修改文章状态选择变化\r\n    editArticleStateChange(val) {\r\n      this.editArticleData.articlestate = val;\r\n    },\r\n    //  文章修改焦点变化\r\n    editArticleBannerImgChange(response, file, filelist) {\r\n      let fileListArray = [];\r\n      filelist.forEach(item => {\r\n        fileListArray.push(item.response.filename);\r\n      });\r\n      this.editArticleData.bannerimg = fileListArray.join(\"|\");\r\n    },\r\n    handleClose(done) {\r\n      MessageBox.confirm(\"确认关闭？\")\r\n        .then(_ => {\r\n          done();\r\n        })\r\n        .catch(_ => {});\r\n    }\r\n  },\r\n  components: {\r\n    Editor,\r\n    ImgLoad\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang='stylus' scoped>\r\n.dialog-wrap {\r\n  &>>>.el-dialog {\r\n    .el-dialog__body {\r\n      &>* {\r\n        margin-bottom: 20px;\r\n      }\r\n\r\n      .top {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        &>* {\r\n          width: 18%;\r\n        }\r\n      }\r\n\r\n      .middle {\r\n        &>* {\r\n          margin-bottom: 20px;\r\n        }\r\n      }\r\n\r\n      .footer {\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit-article.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit-article.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./edit-article.vue?vue&type=template&id=5b85b27e&scoped=true&\"\nimport script from \"./edit-article.vue?vue&type=script&lang=js&\"\nexport * from \"./edit-article.vue?vue&type=script&lang=js&\"\nimport style0 from \"./edit-article.vue?vue&type=style&index=0&id=5b85b27e&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5b85b27e\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"add-article.vue\"},[_c('div',{staticClass:\"dialog-wrap\"},[_c('el-dialog',{attrs:{\"title\":\"添加文章\",\"visible\":_vm.dialogVisible,\"width\":\"80%\",\"before-close\":_vm.handleClose},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('div',{staticClass:\"top\"},[_c('el-input',{attrs:{\"placeholder\":\"文章标题\"},model:{value:(_vm.article.title),callback:function ($$v) {_vm.$set(_vm.article, \"title\", $$v)},expression:\"article.title\"}}),_c('el-date-picker',{attrs:{\"type\":\"datetime\",\"placeholder\":\"选择日期时间\",\"default-time\":\"12:00:00\"},on:{\"change\":_vm.articleCreateTimeChange},model:{value:(_vm.article.createtime),callback:function ($$v) {_vm.$set(_vm.article, \"createtime\", $$v)},expression:\"article.createtime\"}}),_c('el-select',{attrs:{\"placeholder\":\"文章标签\"},on:{\"change\":_vm.articleTypeChange},model:{value:(_vm.article.type),callback:function ($$v) {_vm.$set(_vm.article, \"type\", $$v)},expression:\"article.type\"}},_vm._l((_vm.articleTypeData),function(group,index){return _c('el-option-group',{key:index,attrs:{\"label\":group.label}},_vm._l((group.options),function(it,id){return _c('el-option',{key:id,attrs:{\"label\":it.label,\"value\":it.id}})}),1)}),1),_c('el-select',{attrs:{\"placeholder\":\"是否置顶\"},on:{\"change\":_vm.articleTopChange},model:{value:(_vm.article.top),callback:function ($$v) {_vm.$set(_vm.article, \"top\", $$v)},expression:\"article.top\"}},[_c('el-option',{attrs:{\"label\":\"不置顶\",\"value\":\"0\"}}),_c('el-option',{attrs:{\"label\":\"置顶\",\"value\":\"1\"}})],1)],1),_c('div',{staticClass:\"middle\"},[_c('el-input',{attrs:{\"type\":\"textarea\",\"placeholder\":\"文章描述\"},model:{value:(_vm.article.desc),callback:function ($$v) {_vm.$set(_vm.article, \"desc\", $$v)},expression:\"article.desc\"}}),_c('editor',{ref:\"editor\",on:{\"getEditorContent\":_vm.getEditorContent}})],1),_c('div',{staticClass:\"footer\"},[_c('div',{staticClass:\"imgload-wrap\"},[_c('img-load',{attrs:{\"action\":\"http://localhost:9001/uploadArticleBannerImg\"},on:{\"uploadImageSuccess\":_vm.articleBannerImgChange}})],1)]),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\"取 消\")]),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.commitArticle}},[_vm._v(\"确 定\")])],1)])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"add-article.vue\">\r\n    <div class=\"dialog-wrap\">\r\n      <el-dialog title=\"添加文章\" :visible.sync=\"dialogVisible\" width=\"80%\" :before-close=\"handleClose\">\r\n        <div class=\"top\">\r\n          <el-input placeholder=\"文章标题\" v-model=\"article.title\"></el-input>\r\n          <el-date-picker\r\n            v-model=\"article.createtime\"\r\n            type=\"datetime\"\r\n            @change=\"articleCreateTimeChange\"\r\n            placeholder=\"选择日期时间\"\r\n            default-time=\"12:00:00\"\r\n          ></el-date-picker>\r\n          <!-- 类别选择 -->\r\n          <el-select @change=\"articleTypeChange\" v-model=\"article.type\" placeholder=\"文章标签\">\r\n            <el-option-group\r\n              v-for=\"(group, index) in articleTypeData\"\r\n              :key=\"index\"\r\n              :label=\"group.label\"\r\n            >\r\n              <el-option\r\n                v-for=\"(it,id) in group.options\"\r\n                :key=\"id\"\r\n                :label=\"it.label\"\r\n                :value=\"it.id\"\r\n              ></el-option>\r\n            </el-option-group>\r\n          </el-select>\r\n          <!-- 置顶选择 -->\r\n          <el-select @change=\"articleTopChange\" v-model=\"article.top\" placeholder=\"是否置顶\">\r\n            <el-option label=\"不置顶\" value=\"0\"></el-option>\r\n            <el-option label=\"置顶\" value=\"1\"></el-option>\r\n          </el-select>\r\n        </div>\r\n\r\n        <div class=\"middle\">\r\n          <el-input type=\"textarea\" placeholder=\"文章描述\" v-model=\"article.desc\"></el-input>\r\n          <editor ref=\"editor\" @getEditorContent=\"getEditorContent\"></editor>\r\n        </div>\r\n\r\n        <div class=\"footer\">\r\n          <div class=\"imgload-wrap\">\r\n            <img-load\r\n              @uploadImageSuccess=\"articleBannerImgChange\"\r\n              action=\"http://localhost:9001/uploadArticleBannerImg\"\r\n            ></img-load>\r\n          </div>\r\n        </div>\r\n        <span slot=\"footer\" class=\"dialog-footer\">\r\n          <el-button @click=\"dialogVisible = false\">取 消</el-button>\r\n          <el-button type=\"primary\" @click=\"commitArticle\">确 定</el-button>\r\n        </span>\r\n      </el-dialog>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { MessageBox, Notification } from \"element-ui\";\r\nimport { postArticleData } from \"api/article.js\";\r\nimport Editor from \"components/admin/common/Editor.vue\";\r\nimport ImgLoad from \"components/admin/common/imgLoad.vue\";\r\nexport default {\r\n  props: [\"articleTypeData\"],\r\n  data() {\r\n    return {\r\n      dialogVisible: false,\r\n      article: {\r\n        title: \"\",\r\n        createtime: \"\",\r\n        type: \"\",\r\n        desc: \"\",\r\n        content: \"\",\r\n        bannerimg: \"\",\r\n        top: \"\"\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    //  提交文章添加\r\n    commitArticle() {\r\n      // 富文本内容赋值\r\n      this.$refs.editor.getContent();\r\n      // 请求服务器添加数据\r\n      postArticleData(this.article)\r\n        .then(res => {\r\n          if (res) {\r\n            Notification({\r\n              title: \"添加文章\",\r\n              message: \"文章添加成功\",\r\n              type: \"success\"\r\n            });\r\n            setTimeout(() => {\r\n              this.dialogVisible = false;\r\n            }, 1000);\r\n          } else {\r\n            Notification({\r\n              title: \"添加失败\",\r\n              message: \"添加文章失败，请确定文章内容规范\",\r\n              type: \"error\"\r\n            });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          Notification({\r\n            title: \"添加失败\",\r\n            message: \"添加文章失败，请确定文章内容规范\",\r\n            type: \"error\"\r\n          });\r\n        });\r\n    },\r\n    //  获得富文本内容\r\n    getEditorContent(text) {\r\n      this.article.content = this.$xss(text);\r\n    },\r\n    //  文章添加类别选中值发生变化\r\n    articleTypeChange(val) {\r\n      this.article.type = val;\r\n    },\r\n    //  文章添加时间选中值发生变化\r\n    articleCreateTimeChange(val) {\r\n      this.article.createtime = val;\r\n    },\r\n    //  文章置顶选择发送变化\r\n    articleTopChange(val) {\r\n      this.article.top = val;\r\n    },\r\n    //  文章添加焦点图变化\r\n    articleBannerImgChange(response, file, filelist) {\r\n      let fileListArray = [];\r\n      filelist.forEach(item => {\r\n        fileListArray.push(item.response.filename);\r\n      });\r\n      this.article.bannerimg = fileListArray.join(\"|\");\r\n    },\r\n    handleClose(done) {\r\n      MessageBox.confirm(\"确认关闭？\")\r\n        .then(_ => {\r\n          done();\r\n        })\r\n        .catch(_ => {});\r\n    }\r\n  },\r\n  components: {\r\n    Editor,\r\n    ImgLoad\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang='stylus' scoped>\r\n.dialog-wrap {\r\n  &>>>.el-dialog {\r\n    .el-dialog__body {\r\n      &>* {\r\n        margin-bottom: 20px;\r\n      }\r\n\r\n      .top {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        &>* {\r\n          width: 22%;\r\n        }\r\n      }\r\n\r\n      .middle {\r\n        &>* {\r\n          margin-bottom: 20px;\r\n        }\r\n      }\r\n\r\n      .footer {\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./add-article.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./add-article.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./add-article.vue?vue&type=template&id=478322f4&scoped=true&\"\nimport script from \"./add-article.vue?vue&type=script&lang=js&\"\nexport * from \"./add-article.vue?vue&type=script&lang=js&\"\nimport style0 from \"./add-article.vue?vue&type=style&index=0&id=478322f4&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"478322f4\",\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"article-management\">\r\n    <admin-default :selectMenuIndex=\"'2'\">\r\n      <div slot=\"main\">\r\n        <!-- 操作 -->\r\n        <div class=\"opera-wrap\">\r\n          <el-button type=\"primary\" @click=\"addArticleShow\">添加文章</el-button>\r\n          <el-button :disabled=\"!ids.length\" type=\"danger\" @click=\"deleteChecked(ids)\">批量删除</el-button>\r\n          <el-input placeholder=\"请输入搜索关键词\" v-model=\"searchInput\" class=\"input-with-select\">\r\n            <el-select class=\"select\" v-model=\"select\" slot=\"prepend\" placeholder=\"请选择\">\r\n              <el-option label=\"标题\" value=\"1\"></el-option>\r\n              <el-option label=\"类别\" value=\"2\"></el-option>\r\n            </el-select>\r\n            <el-button\r\n              @click=\"getArticleData({type:select,keyword:searchInput})\"\r\n              slot=\"append\"\r\n              icon=\"el-icon-search\"\r\n            ></el-button>\r\n          </el-input>\r\n        </div>\r\n        <!-- 表格 -->\r\n        <div class=\"tab-wrap\">\r\n          <el-table\r\n            border\r\n            highlight-current-row\r\n            :data=\"articleListData\"\r\n            style=\"width: 100%\"\r\n            max-height=\"470\"\r\n            @selection-change=\"handleSelectionChange\"\r\n          >\r\n            <el-table-column align=\"center\" type=\"selection\"></el-table-column>\r\n            <el-table-column align=\"center\" label=\"日期\">\r\n              <template slot-scope=\"scope\">\r\n                <p>{{ formatTime(new Date(scope.row.createtime))}}</p>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column align=\"center\" prop=\"title\" label=\"标题\"></el-table-column>\r\n            <el-table-column show-overflow-tooltip align=\"center\" prop=\"desc\" label=\"描述\"></el-table-column>\r\n            <el-table-column align=\"center\" label=\"焦点图\">\r\n              <template slot-scope=\"scope\">\r\n                <img\r\n                  width=\"100%\"\r\n                  :src=\"scope.row.bannerimg?scope.row.bannerimg:'https://timgsa.baidu.com/timg?image&quality=80&size=b9999_10000&sec=1558659946263&di=83a1047b593eb9dd0dc19f1666aae116&imgtype=0&src=http%3A%2F%2Fb-ssl.duitang.com%2Fuploads%2Fitem%2F201703%2F30%2F20170330225122_TLMun.jpeg'\"\r\n                  alt=\"封面\"\r\n                >\r\n                <span>[下载]</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column align=\"center\" prop=\"top\" label=\"是否置顶\">\r\n              <template slot-scope=\"scope\">\r\n                <span>{{ scope.row.top == 0? '否':'是' }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column align=\"center\" prop=\"articlestate\" label=\"文章状态\">\r\n              <template slot-scope=\"scope\">\r\n                <span>{{ scope.row.articlestate == 0? '隐藏':'正常' }}</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column align=\"center\" prop=\"name\" label=\"文章归类\"></el-table-column>\r\n            <el-table-column align=\"center\" fixed=\"right\" prop=\"opera\" label=\"操作\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button\r\n                  @click.native.prevent=\"editRow(scope.$index, articleListData)\"\r\n                  type=\"primary\"\r\n                  size=\"mini\"\r\n                >编辑</el-button>\r\n                <el-button\r\n                  @click.native.prevent=\"deleteRow(scope.$index, articleListData)\"\r\n                  type=\"danger\"\r\n                  size=\"mini\"\r\n                >移除</el-button>\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n        </div>\r\n        <!-- 分页 -->\r\n        <div class=\"pagation-wrap\">\r\n          <el-pagination\r\n            @size-change=\"handleSizeChange\"\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pagationParams.currentPage\"\r\n            :page-sizes=\"[1, 10, 20, 50, 100, 200, 500]\"\r\n            :page-size=\"pagationParams.limit\"\r\n            layout=\"total, sizes, prev, pager, next, jumper\"\r\n            :total=\"pagationParams.totalcount\"\r\n          ></el-pagination>\r\n        </div>\r\n\r\n        <!-- 添加文章模态组件 -->\r\n        <add-article :articleTypeData=\"articleTypeData\" ref=\"add-article\"></add-article>\r\n\r\n        <!-- 修改文章模态组件 -->\r\n        <edit-article\r\n          :articleTypeData=\"articleTypeData\"\r\n          :editArticleData=\"editArticleData\"\r\n          ref=\"edit-article\"\r\n        ></edit-article>\r\n      </div>\r\n    </admin-default>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { MessageBox, Notification } from \"element-ui\";\r\nimport {\r\n  getArticleTypeData,\r\n  getArticleData,\r\n  deleteArticleData\r\n} from \"api/article.js\";\r\nimport { formatTime } from \"common/js/util\";\r\nimport AdminDefault from \"./default.vue\";\r\nimport EditArticle from \"components/admin/article/edit-article.vue\";\r\nimport AddArticle from \"components/admin/article/add-article.vue\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      articleListData: [],\r\n      pagationParams: {\r\n        currentPage: 1,\r\n        totalcount: 100,\r\n        limit: 50\r\n      },\r\n      select: \"\",\r\n      searchInput: \"\",\r\n      articleTypeData: [],\r\n      ids: [], //  复选框选中id数据\r\n      editArticleData: {\r\n        articlestate: 1\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    //   添加文章model显示\r\n    addArticleShow() {\r\n      this.$refs[\"add-article\"].dialogVisible = true;\r\n    },\r\n    //   获取选择框所需文章类别数据\r\n    getArticleTypeData() {\r\n      getArticleTypeData().then(res => {\r\n        // 处理数据, 渲染选择框\r\n        let tempArr = [];\r\n        for (let i = 0; i < res.length; i++) {\r\n          if (res[i].pid === 0) {\r\n            tempArr.push({\r\n              label: res[i].name,\r\n              id: res[i].id,\r\n              options: []\r\n            });\r\n          }\r\n          for (let j = 0; j < res.length; j++) {\r\n            if (res[j].pid === res[i].id) {\r\n              tempArr[i][\"options\"].push({\r\n                label: res[j].name,\r\n                id: res[j].id\r\n              });\r\n            }\r\n          }\r\n        }\r\n        this.articleTypeData = tempArr;\r\n      });\r\n    },\r\n    //   获取文章数据\r\n    getArticleData(params) {\r\n      getArticleData(params).then(res => {\r\n        this.articleListData = res.data;\r\n        this.pagationParams.totalcount = res.totalcount;\r\n      });\r\n    },\r\n    //   复选框选中项变化\r\n    handleSelectionChange(selection) {\r\n      let ids = new Array();\r\n      selection.forEach(item => {\r\n        ids.push(item.id);\r\n      });\r\n      this.ids = ids;\r\n    },\r\n    //  每页显示条数变化回调\r\n    handleSizeChange(val) {\r\n      this.pagationParams.limit = val;\r\n      this.getArticleData({\r\n        type: this.select,\r\n        keyword: this.searchInput,\r\n        limit: this.pagationParams.limit,\r\n        currentPage: this.pagationParams.currentPage\r\n      });\r\n    },\r\n    //  页码改变回调\r\n    handleCurrentChange(val) {\r\n      this.pagationParams.currentPage = val;\r\n      this.getArticleData({\r\n        type: this.select,\r\n        keyword: this.searchInput,\r\n        limit: this.pagationParams.limit,\r\n        currentPage: this.pagationParams.currentPage\r\n      });\r\n    },\r\n    //  操作行\r\n    editRow(index, rows) {\r\n      this.editArticleData = Object.assign(\r\n        {},\r\n        this.editArticleData,\r\n        this.articleListData.find(item => item.id == rows[index].id)\r\n      );\r\n      this.$refs[\"edit-article\"].editDialogVisible = true;\r\n    },\r\n    //  移除一项\r\n    deleteRow(index, rows) {\r\n      MessageBox.confirm(\"此操作将永久删除数据, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          //  动态请求隐藏操作\r\n          deleteArticleData({ id: rows[index].id }).then(res => {\r\n            if (res) {\r\n              //  静态删除\r\n              rows.splice(index, 1);\r\n              this.pagationParams.totalcount--;\r\n              Notification({\r\n                title: \"删除成功\",\r\n                message: \"删除文章成功\",\r\n                type: \"success\"\r\n              });\r\n            } else {\r\n              Notification({\r\n                title: \"删除失败\",\r\n                message: \"删除文章失败\",\r\n                type: \"error\"\r\n              });\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          Notification({\r\n            title: \"取消删除成功\",\r\n            message: \"已取消删除\",\r\n            type: \"info\"\r\n          });\r\n        });\r\n    },\r\n    //  移除多项\r\n    deleteChecked(ids) {\r\n      MessageBox.confirm(\"此操作将批量删除数据, 是否继续?\", \"提示\", {\r\n        confirmButtonText: \"确定\",\r\n        cancelButtonText: \"取消\",\r\n        type: \"warning\"\r\n      })\r\n        .then(() => {\r\n          //  动态请求隐藏操作\r\n          deleteArticleData({ id: ids }).then(res => {\r\n            if (res) {\r\n              //  静态删除 -> 数组中剔除筛选所有id数据\r\n              this.articleListData = this.articleListData.filter(\r\n                (item, index) => ids.findIndex(id => id == item.id) == -1\r\n              );\r\n              this.pagationParams.totalcount--;\r\n              Notification({\r\n                title: \"删除成功\",\r\n                message: \"批量删除文章成功\",\r\n                type: \"success\"\r\n              });\r\n            } else {\r\n              Notification({\r\n                title: \"删除失败\",\r\n                message: \"批量删除文章失败\",\r\n                type: \"error\"\r\n              });\r\n            }\r\n          });\r\n        })\r\n        .catch(() => {\r\n          Notification({\r\n            title: \"取消删除成功\",\r\n            message: \"已取消删除\",\r\n            type: \"info\"\r\n          });\r\n        });\r\n    },\r\n    formatTime(params) {\r\n      return formatTime(params);\r\n    }\r\n  },\r\n  created() {\r\n    this.getArticleData({\r\n      type: this.select,\r\n      keyword: this.searchInput,\r\n      limit: this.pagationParams.limit,\r\n      currentPage: this.pagationParams.currentPage\r\n    });\r\n\r\n    //   请求服务器获取文章类别菜单数据\r\n    this.getArticleTypeData();\r\n  },\r\n  components: {\r\n    AdminDefault,\r\n    EditArticle,\r\n    AddArticle\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang='stylus' scoped>\r\n@import '~common/stylus/variable.styl';\r\n\r\n.article-management {\r\n  .main {\r\n    .opera-wrap {\r\n      display: flex;\r\n      align-items: center;\r\n      margin-bottom: 20px;\r\n\r\n      &>* {\r\n        margin-right: 20px;\r\n\r\n        &:last-child {\r\n          margin-right: 0;\r\n        }\r\n      }\r\n\r\n      .select {\r\n        width: 100px;\r\n      }\r\n    }\r\n\r\n    .tab-wrap {\r\n      margin-bottom: 20px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./articles-management.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./articles-management.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./articles-management.vue?vue&type=template&id=347779d0&scoped=true&\"\nimport script from \"./articles-management.vue?vue&type=script&lang=js&\"\nexport * from \"./articles-management.vue?vue&type=script&lang=js&\"\nimport style0 from \"./articles-management.vue?vue&type=style&index=0&id=347779d0&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"347779d0\",\n  null\n  \n)\n\nexport default component.exports","module.exports = require(\"core-js/library/fn/object/assign\");","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./default.vue?vue&type=style&index=0&id=1579c499&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./default.vue?vue&type=style&index=0&id=1579c499&lang=stylus&scoped=true&\"","'use strict';\n// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)\nvar $export = require('./_export');\nvar $find = require('./_array-methods')(5);\nvar KEY = 'find';\nvar forced = true;\n// Shouldn't skip holes\nif (KEY in []) Array(1)[KEY](function () { forced = false; });\n$export($export.P + $export.F * forced, 'Array', {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\nrequire('./_add-to-unscopables')(KEY);\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./add-article.vue?vue&type=style&index=0&id=478322f4&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./add-article.vue?vue&type=style&index=0&id=478322f4&lang=stylus&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"admin-default\"},[_c('div',{staticClass:\"nav-bar\"},[_c('div',{staticClass:\"vertical-menu-wrap\"},[_c('el-menu',{staticClass:\"el-menu-vertical\",attrs:{\"default-active\":_vm.selectMenuIndex,\"background-color\":\"#fff\",\"text-color\":\"#333\",\"active-text-color\":\"#658FF7\"},on:{\"select\":_vm.handleSelect}},[_c('el-menu-item',{attrs:{\"index\":\"1\"}},[_c('router-link',{attrs:{\"slot\":\"title\",\"tag\":\"span\",\"to\":\"/admin/index\"},slot:\"title\"},[_vm._v(\"后台管理\")])],1),_c('el-menu-item',{attrs:{\"index\":\"2\"}},[_c('router-link',{attrs:{\"slot\":\"title\",\"tag\":\"span\",\"to\":\"/admin/article\"},slot:\"title\"},[_vm._v(\"文章管理\")])],1)],1)],1)]),_c('div',{staticClass:\"main\"},[_vm._t(\"main\")],2)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"admin-default\">\r\n    <div class=\"nav-bar\">\r\n      <div class=\"vertical-menu-wrap\">\r\n        <el-menu\r\n          :default-active=\"selectMenuIndex\"\r\n          class=\"el-menu-vertical\"\r\n          @select=\"handleSelect\"\r\n          background-color=\"#fff\"\r\n          text-color=\"#333\"\r\n          active-text-color=\"#658FF7\"\r\n        >\r\n          <el-menu-item index=\"1\">\r\n            <router-link tag=\"span\" to=\"/admin/index\" slot=\"title\">后台管理</router-link>\r\n          </el-menu-item>\r\n          <el-menu-item index=\"2\">\r\n            <router-link tag=\"span\" to=\"/admin/article\" slot=\"title\">文章管理</router-link>\r\n          </el-menu-item>\r\n        </el-menu>\r\n      </div>\r\n    </div>\r\n    <div class=\"main\">\r\n      <slot name=\"main\"></slot>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: [\"selectMenuIndex\"],\r\n  data() {\r\n    return {};\r\n  },\r\n  methods: {\r\n    handleSelect() {}\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang='stylus' scoped>\r\n.admin-default {\r\n  display: flex;\r\n\r\n  .nav-bar {\r\n    width: 220px;\r\n    height: 100vh;\r\n\r\n    &>>>.el-menu {\r\n      border-right: 1px solid transparent;\r\n    }\r\n  }\r\n\r\n  .main {\r\n    padding: 20px;\r\n    flex: 1;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./default.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./default.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./default.vue?vue&type=template&id=1579c499&scoped=true&\"\nimport script from \"./default.vue?vue&type=script&lang=js&\"\nexport * from \"./default.vue?vue&type=script&lang=js&\"\nimport style0 from \"./default.vue?vue&type=style&index=0&id=1579c499&lang=stylus&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1579c499\",\n  null\n  \n)\n\nexport default component.exports","var $iterators = require('./es6.array.iterator');\nvar getKeys = require('./_object-keys');\nvar redefine = require('./_redefine');\nvar global = require('./_global');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar wks = require('./_wks');\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\n\nvar DOMIterables = {\n  CSSRuleList: true, // TODO: Not spec compliant, should be false.\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true, // TODO: Not spec compliant, should be false.\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true, // TODO: Not spec compliant, should be false.\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\n\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);\n  }\n}\n","// 9.4.2.3 ArraySpeciesCreate(originalArray, length)\nvar speciesConstructor = require('./_array-species-constructor');\n\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n","var isObject = require('./_is-object');\nvar isArray = require('./_is-array');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    // cross-realm fallback\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? Array : C;\n};\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit-article.vue?vue&type=style&index=0&id=5b85b27e&lang=stylus&scoped=true&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../../node_modules/css-loader/index.js??ref--11-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../../node_modules/stylus-loader/index.js??ref--11-oneOf-1-3!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./edit-article.vue?vue&type=style&index=0&id=5b85b27e&lang=stylus&scoped=true&\""],"sourceRoot":""}